744ec9f3a1399cdd240884e49d16fd0a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var MovieCard = function MovieCard(props) {
  var movie = props.movie,
      handlePress = props.handlePress;
  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    style: {
      flex: 1
    },
    onPress: handlePress
  }, _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.View, {
    style: styles.body
  }, _react.default.createElement(_reactNative.Image, {
    style: styles.image,
    source: {
      uri: "http://image.tmdb.org/t/p/original" + (movie == null ? void 0 : movie.poster_path)
    }
  }), _react.default.createElement(_reactNative.View, {
    style: {
      flexDirection: 'row',
      paddingTop: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 1,
    style: styles.title
  }, movie.title), _react.default.createElement(_reactNative.Text, {
    style: styles.popularity
  }, "(", movie.vote_average, ")")), _react.default.createElement(_reactNative.View, {
    style: {
      paddingVertical: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 2,
    style: styles.description
  }, movie.overview)))));
};

var _default = MovieCard;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    borderWidth: 12,
    borderColor: "transparent"
  },
  body: {
    flex: 1,
    maxWidth: 180,
    height: 290,
    borderRadius: 20,
    backgroundColor: "#dfdfdf",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 3
    },
    shadowOpacity: 0.23,
    shadowRadius: 3.42,
    elevation: 6
  },
  image: {
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    height: 200,
    width: undefined
  },
  title: {
    fontSize: 16,
    color: '#4285f4',
    fontWeight: '500',
    flex: 1
  },
  popularity: {
    fontSize: 15,
    color: "#4a4a4a",
    fontWeight: "500"
  },
  description: {
    fontSize: 14,
    color: "#4a4a4a"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vdmllQ2FyZC50c3giXSwibmFtZXMiOlsiTW92aWVDYXJkIiwicHJvcHMiLCJtb3ZpZSIsImhhbmRsZVByZXNzIiwiZmxleCIsInN0eWxlcyIsImNvbnRhaW5lciIsImJvZHkiLCJpbWFnZSIsInVyaSIsInBvc3Rlcl9wYXRoIiwiZmxleERpcmVjdGlvbiIsInBhZGRpbmdUb3AiLCJwYWRkaW5nSG9yaXpvbnRhbCIsInRpdGxlIiwicG9wdWxhcml0eSIsInZvdGVfYXZlcmFnZSIsInBhZGRpbmdWZXJ0aWNhbCIsImRlc2NyaXB0aW9uIiwib3ZlcnZpZXciLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsIm1heFdpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiYmFja2dyb3VuZENvbG9yIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJlbGV2YXRpb24iLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJ1bmRlZmluZWQiLCJmb250U2l6ZSIsImNvbG9yIiwiZm9udFdlaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQVFBLElBQU1BLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLEtBQUQsRUFBaUI7QUFBQSxNQUN6QkMsS0FEeUIsR0FDRkQsS0FERSxDQUN6QkMsS0FEeUI7QUFBQSxNQUNsQkMsV0FEa0IsR0FDRkYsS0FERSxDQUNsQkUsV0FEa0I7QUFFakMsU0FDRSw2QkFBQyxxQ0FBRDtBQUEwQixJQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFqQztBQUE0QyxJQUFBLE9BQU8sRUFBRUQ7QUFBckQsS0FDRSw2QkFBQyxpQkFBRDtBQUFNLElBQUEsS0FBSyxFQUFFRSxNQUFNLENBQUNDO0FBQXBCLEtBQ0UsNkJBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRUQsTUFBTSxDQUFDRTtBQUFwQixLQUNFLDZCQUFDLGtCQUFEO0FBQ0csSUFBQSxLQUFLLEVBQUVGLE1BQU0sQ0FBQ0csS0FEakI7QUFFRyxJQUFBLE1BQU0sRUFBRTtBQUNQQyxNQUFBQSxHQUFHLDBDQUF1Q1AsS0FBdkMsb0JBQXVDQSxLQUFLLENBQUVRLFdBQTlDO0FBREk7QUFGWCxJQURGLEVBT0UsNkJBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxhQUFhLEVBQUcsS0FBakI7QUFBd0JDLE1BQUFBLFVBQVUsRUFBRyxDQUFyQztBQUF3Q0MsTUFBQUEsaUJBQWlCLEVBQUc7QUFBNUQ7QUFBYixLQUNFLDZCQUFDLGlCQUFEO0FBQU0sSUFBQSxhQUFhLEVBQUMsTUFBcEI7QUFBMkIsSUFBQSxhQUFhLEVBQUUsQ0FBMUM7QUFBNkMsSUFBQSxLQUFLLEVBQUVSLE1BQU0sQ0FBQ1M7QUFBM0QsS0FBbUVaLEtBQUssQ0FBQ1ksS0FBekUsQ0FERixFQUVFLDZCQUFDLGlCQUFEO0FBQU0sSUFBQSxLQUFLLEVBQUVULE1BQU0sQ0FBQ1U7QUFBcEIsVUFBa0NiLEtBQUssQ0FBQ2MsWUFBeEMsTUFGRixDQVBGLEVBV0UsNkJBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxlQUFlLEVBQUcsQ0FBbkI7QUFBc0JKLE1BQUFBLGlCQUFpQixFQUFHO0FBQTFDO0FBQWIsS0FDRyw2QkFBQyxpQkFBRDtBQUFNLElBQUEsYUFBYSxFQUFDLE1BQXBCO0FBQTJCLElBQUEsYUFBYSxFQUFFLENBQTFDO0FBQTZDLElBQUEsS0FBSyxFQUFFUixNQUFNLENBQUNhO0FBQTNELEtBQXlFaEIsS0FBSyxDQUFDaUIsUUFBL0UsQ0FESCxDQVhGLENBREYsQ0FERixDQURGO0FBcUJELENBdkJEOztlQXlCZW5CLFM7OztBQUVmLElBQU1LLE1BQU0sR0FBR2Usd0JBQVdDLE1BQVgsQ0FBa0I7QUFDL0JmLEVBQUFBLFNBQVMsRUFBRTtBQUNURixJQUFBQSxJQUFJLEVBQUUsQ0FERztBQUVUa0IsSUFBQUEsV0FBVyxFQUFFLEVBRko7QUFHVEMsSUFBQUEsV0FBVyxFQUFFO0FBSEosR0FEb0I7QUFNL0JoQixFQUFBQSxJQUFJLEVBQUU7QUFDSkgsSUFBQUEsSUFBSSxFQUFFLENBREY7QUFFSm9CLElBQUFBLFFBQVEsRUFBRSxHQUZOO0FBR0pDLElBQUFBLE1BQU0sRUFBRSxHQUhKO0FBSUpDLElBQUFBLFlBQVksRUFBRSxFQUpWO0FBS0pDLElBQUFBLGVBQWUsRUFBRSxTQUxiO0FBTUpDLElBQUFBLFdBQVcsRUFBRSxNQU5UO0FBT0pDLElBQUFBLFlBQVksRUFBRTtBQUNiQyxNQUFBQSxLQUFLLEVBQUUsQ0FETTtBQUViTCxNQUFBQSxNQUFNLEVBQUU7QUFGSyxLQVBWO0FBV0pNLElBQUFBLGFBQWEsRUFBRSxJQVhYO0FBWUpDLElBQUFBLFlBQVksRUFBRSxJQVpWO0FBYUpDLElBQUFBLFNBQVMsRUFBRTtBQWJQLEdBTnlCO0FBcUIvQnpCLEVBQUFBLEtBQUssRUFBRTtBQUNMMEIsSUFBQUEsbUJBQW1CLEVBQUUsRUFEaEI7QUFFTEMsSUFBQUEsb0JBQW9CLEVBQUcsRUFGbEI7QUFHSFYsSUFBQUEsTUFBTSxFQUFFLEdBSEw7QUFJSEssSUFBQUEsS0FBSyxFQUFHTTtBQUpMLEdBckJ3QjtBQTJCL0J0QixFQUFBQSxLQUFLLEVBQUU7QUFDTHVCLElBQUFBLFFBQVEsRUFBRSxFQURMO0FBRUxDLElBQUFBLEtBQUssRUFBRSxTQUZGO0FBR0xDLElBQUFBLFVBQVUsRUFBRSxLQUhQO0FBSUxuQyxJQUFBQSxJQUFJLEVBQUc7QUFKRixHQTNCd0I7QUFpQy9CVyxFQUFBQSxVQUFVLEVBQUU7QUFDVnNCLElBQUFBLFFBQVEsRUFBRSxFQURBO0FBRVZDLElBQUFBLEtBQUssRUFBRSxTQUZHO0FBR1ZDLElBQUFBLFVBQVUsRUFBRztBQUhILEdBakNtQjtBQXNDL0JyQixFQUFBQSxXQUFXLEVBQUU7QUFDWG1CLElBQUFBLFFBQVEsRUFBRSxFQURDO0FBRVhDLElBQUFBLEtBQUssRUFBRztBQUZHO0FBdENrQixDQUFsQixDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7U3R5bGVTaGVldCwgVGV4dCwgVmlldywgSW1hZ2UsIFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFja30gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7TW92aWV9IGZyb20gJy4uL21vZGFsL21vZGFscyc7XG5cbmludGVyZmFjZSBQcm9wIHtcbiAgbW92aWU6IE1vdmllLFxuICBoYW5kbGVQcmVzcyA6ICgpID0+IHt9XG59XG5cbmNvbnN0IE1vdmllQ2FyZCA9IChwcm9wczogUHJvcCkgPT4ge1xuICBjb25zdCB7IG1vdmllLCBoYW5kbGVQcmVzcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayBzdHlsZT17e2ZsZXg6IDF9fSBvblByZXNzPXtoYW5kbGVQcmVzc30+XG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuYm9keX0+XG4gICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5pbWFnZX1cbiAgICAgICAgICAgICBzb3VyY2U9e3tcbiAgICAgICAgICAgICAgdXJpOiBgaHR0cDovL2ltYWdlLnRtZGIub3JnL3QvcC9vcmlnaW5hbCR7bW92aWU/LnBvc3Rlcl9wYXRofWBcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8VmlldyBzdHlsZT17e2ZsZXhEaXJlY3Rpb24gOiAncm93JywgcGFkZGluZ1RvcCA6IDUsIHBhZGRpbmdIb3Jpem9udGFsIDogOH19PlxuICAgICAgICAgICAgPFRleHQgZWxsaXBzaXplTW9kZT1cInRhaWxcIiBudW1iZXJPZkxpbmVzPXsxfSBzdHlsZT17c3R5bGVzLnRpdGxlfT57bW92aWUudGl0bGV9PC9UZXh0PlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5wb3B1bGFyaXR5fT4oe21vdmllLnZvdGVfYXZlcmFnZX0pPC9UZXh0PlxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgICA8VmlldyBzdHlsZT17e3BhZGRpbmdWZXJ0aWNhbCA6IDUsIHBhZGRpbmdIb3Jpem9udGFsIDogOH19PlxuICAgICAgICAgICAgIDxUZXh0IGVsbGlwc2l6ZU1vZGU9XCJ0YWlsXCIgbnVtYmVyT2ZMaW5lcz17Mn0gc3R5bGU9e3N0eWxlcy5kZXNjcmlwdGlvbn0+e21vdmllLm92ZXJ2aWV3fTwvVGV4dD5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgIDwvVmlldz5cbiAgICAgIDwvVmlldz5cbiAgICA8L1RvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1vdmllQ2FyZDtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGJvcmRlcldpZHRoOiAxMixcbiAgICBib3JkZXJDb2xvcjogXCJ0cmFuc3BhcmVudFwiXG4gIH0sXG4gIGJvZHk6IHtcbiAgICBmbGV4OiAxLFxuICAgIG1heFdpZHRoOiAxODAsXG4gICAgaGVpZ2h0OiAyOTAsXG4gICAgYm9yZGVyUmFkaXVzOiAyMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2RmZGZkZlwiLFxuICAgIHNoYWRvd0NvbG9yOiBcIiMwMDBcIixcbiAgICBzaGFkb3dPZmZzZXQ6IHtcbiAgICBcdHdpZHRoOiAwLFxuICAgICBoZWlnaHQ6IDMsXG4gICAgfSxcbiAgICBzaGFkb3dPcGFjaXR5OiAwLjIzLFxuICAgIHNoYWRvd1JhZGl1czogMy40MixcbiAgICBlbGV2YXRpb246IDYsXG4gICB9LFxuICBpbWFnZToge1xuICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IDIwLFxuICAgIGJvcmRlclRvcFJpZ2h0UmFkaXVzIDogMjAsXG4gICAgICBoZWlnaHQ6IDIwMCxcbiAgICAgIHdpZHRoIDogdW5kZWZpbmVkXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGNvbG9yOiAnIzQyODVmNCcsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgZmxleCA6IDEsXG4gIH0sXG4gIHBvcHVsYXJpdHk6IHtcbiAgICBmb250U2l6ZTogMTUsXG4gICAgY29sb3I6IFwiIzRhNGE0YVwiLFxuICAgIGZvbnRXZWlnaHQgOiBcIjUwMFwiXG4gIH0sXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZm9udFNpemU6IDE0LFxuICAgIGNvbG9yIDogXCIjNGE0YTRhXCJcbiAgfVxufSk7XG4iXX0=