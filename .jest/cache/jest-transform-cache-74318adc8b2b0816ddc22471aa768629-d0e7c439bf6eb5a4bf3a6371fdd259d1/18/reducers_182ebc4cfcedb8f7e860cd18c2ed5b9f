45551e8cd77d5338cd8b66ea7ddb7b49
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.movieListReducer = movieListReducer;
exports.movieDetailReducer = movieDetailReducer;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _types = require("../types/types");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var initialMovieListState = {
  movies: [],
  error: null,
  loading: false
};
var initialDetailMovieState = {
  error: null,
  loading: false,
  movie: null
};

function movieListReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialDetailMovieState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case _types.REQUEST_UPCOMING_MOVIES_ACTION:
      {
        return _objectSpread({}, state, {
          loading: true,
          error: null
        });
      }

    case _types.REQUEST_MOVIE_DETAILS_SUCCESS_ACTION:
      {
        return _objectSpread({}, state, {
          loading: false,
          movies: action.data
        });
      }

    case _types.REQUEST_MOVIE_DETAILS_FAILED_ACTION:
      {
        return _objectSpread({}, state, {
          loading: false,
          error: action.error
        });
      }

    default:
      {
        return state;
      }
  }
}

function movieDetailReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialMovieListState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case _types.REQUEST_MOVIE_DETAILS_ACTION:
      {
        return _objectSpread({}, state, {
          loading: true,
          error: null
        });
      }

    case _types.REQUEST_MOVIE_DETAILS_SUCCESS_ACTION:
      {
        return _objectSpread({}, state, {
          movie: action.data,
          loading: false
        });
      }

    case _types.REQUEST_MOVIE_DETAILS_FAILED_ACTION:
      {
        return _objectSpread({}, state, {
          error: action.error,
          loading: false
        });
      }

    default:
      {
        return state;
      }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbImluaXRpYWxNb3ZpZUxpc3RTdGF0ZSIsIm1vdmllcyIsImVycm9yIiwibG9hZGluZyIsImluaXRpYWxEZXRhaWxNb3ZpZVN0YXRlIiwibW92aWUiLCJtb3ZpZUxpc3RSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfQUNUSU9OIiwiUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX1NVQ0NFU1NfQUNUSU9OIiwiZGF0YSIsIlJFUVVFU1RfTU9WSUVfREVUQUlMU19GQUlMRURfQUNUSU9OIiwibW92aWVEZXRhaWxSZWR1Y2VyIiwiUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX0FDVElPTiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFVQSxJQUFNQSxxQkFBcUMsR0FBRztBQUM1Q0MsRUFBQUEsTUFBTSxFQUFFLEVBRG9DO0FBRTVDQyxFQUFBQSxLQUFLLEVBQUUsSUFGcUM7QUFHNUNDLEVBQUFBLE9BQU8sRUFBRTtBQUhtQyxDQUE5QztBQU1BLElBQU1DLHVCQUF5QyxHQUFHO0FBQ2hERixFQUFBQSxLQUFLLEVBQUUsSUFEeUM7QUFFaERDLEVBQUFBLE9BQU8sRUFBRSxLQUZ1QztBQUdoREUsRUFBQUEsS0FBSyxFQUFFO0FBSHlDLENBQWxEOztBQU1PLFNBQVNDLGdCQUFULEdBR0w7QUFBQSxNQUZBQyxLQUVBLHVFQUZRSCx1QkFFUjtBQUFBLE1BREFJLE1BQ0E7O0FBQ0EsVUFBUUEsTUFBTSxDQUFDQyxJQUFmO0FBQ0UsU0FBS0MscUNBQUw7QUFBcUM7QUFDbkMsaUNBQ0tILEtBREw7QUFFRUosVUFBQUEsT0FBTyxFQUFFLElBRlg7QUFHRUQsVUFBQUEsS0FBSyxFQUFFO0FBSFQ7QUFLRDs7QUFFRCxTQUFLUywyQ0FBTDtBQUEyQztBQUN6QyxpQ0FDS0osS0FETDtBQUVFSixVQUFBQSxPQUFPLEVBQUUsS0FGWDtBQUdFRixVQUFBQSxNQUFNLEVBQUVPLE1BQU0sQ0FBQ0k7QUFIakI7QUFLRDs7QUFFRCxTQUFLQywwQ0FBTDtBQUEwQztBQUN4QyxpQ0FDS04sS0FETDtBQUVFSixVQUFBQSxPQUFPLEVBQUUsS0FGWDtBQUdFRCxVQUFBQSxLQUFLLEVBQUVNLE1BQU0sQ0FBQ047QUFIaEI7QUFLRDs7QUFFRDtBQUFTO0FBQ1AsZUFBT0ssS0FBUDtBQUNEO0FBM0JIO0FBNkJEOztBQUVNLFNBQVNPLGtCQUFULEdBR0w7QUFBQSxNQUZBUCxLQUVBLHVFQUZRUCxxQkFFUjtBQUFBLE1BREFRLE1BQ0E7O0FBQ0EsVUFBUUEsTUFBTSxDQUFDQyxJQUFmO0FBQ0UsU0FBS00sbUNBQUw7QUFBbUM7QUFDakMsaUNBQ0tSLEtBREw7QUFFRUosVUFBQUEsT0FBTyxFQUFFLElBRlg7QUFHRUQsVUFBQUEsS0FBSyxFQUFFO0FBSFQ7QUFLRDs7QUFFRCxTQUFLUywyQ0FBTDtBQUEyQztBQUN6QyxpQ0FDS0osS0FETDtBQUVFRixVQUFBQSxLQUFLLEVBQUVHLE1BQU0sQ0FBQ0ksSUFGaEI7QUFHRVQsVUFBQUEsT0FBTyxFQUFFO0FBSFg7QUFLRDs7QUFFRCxTQUFLVSwwQ0FBTDtBQUEwQztBQUN4QyxpQ0FDS04sS0FETDtBQUVFTCxVQUFBQSxLQUFLLEVBQUVNLE1BQU0sQ0FBQ04sS0FGaEI7QUFHRUMsVUFBQUEsT0FBTyxFQUFFO0FBSFg7QUFLRDs7QUFFRDtBQUFTO0FBQ1AsZUFBT0ksS0FBUDtBQUNEO0FBM0JIO0FBNkJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTW92aWVMaXN0U3RhdGUsXG4gIEFwcEFjdGlvbnNUeXBlLFxuICBSRVFVRVNUX01PVklFX0RFVEFJTFNfQUNUSU9OLFxuICBSRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT04sXG4gIFJFUVVFU1RfTU9WSUVfREVUQUlMU19GQUlMRURfQUNUSU9OLFxuICBEZXRhaWxNb3ZpZVN0YXRlLFxuICBSRVFVRVNUX1VQQ09NSU5HX01PVklFU19BQ1RJT04sXG59IGZyb20gJy4uL3R5cGVzL3R5cGVzJztcblxuY29uc3QgaW5pdGlhbE1vdmllTGlzdFN0YXRlOiBNb3ZpZUxpc3RTdGF0ZSA9IHtcbiAgbW92aWVzOiBbXSxcbiAgZXJyb3I6IG51bGwsXG4gIGxvYWRpbmc6IGZhbHNlLFxufTtcblxuY29uc3QgaW5pdGlhbERldGFpbE1vdmllU3RhdGU6IERldGFpbE1vdmllU3RhdGUgPSB7XG4gIGVycm9yOiBudWxsLFxuICBsb2FkaW5nOiBmYWxzZSxcbiAgbW92aWU6IG51bGwsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gbW92aWVMaXN0UmVkdWNlcihcbiAgc3RhdGUgPSBpbml0aWFsRGV0YWlsTW92aWVTdGF0ZSxcbiAgYWN0aW9uOiBBcHBBY3Rpb25zVHlwZSxcbikge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBSRVFVRVNUX1VQQ09NSU5HX01PVklFU19BQ1RJT046IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBSRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT046IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgbW92aWVzOiBhY3Rpb24uZGF0YSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBSRVFVRVNUX01PVklFX0RFVEFJTFNfRkFJTEVEX0FDVElPTjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZpZURldGFpbFJlZHVjZXIoXG4gIHN0YXRlID0gaW5pdGlhbE1vdmllTGlzdFN0YXRlLFxuICBhY3Rpb246IEFwcEFjdGlvbnNUeXBlLFxuKSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIFJFUVVFU1RfTU9WSUVfREVUQUlMU19BQ1RJT046IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBSRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT046IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBtb3ZpZTogYWN0aW9uLmRhdGEsXG4gICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjYXNlIFJFUVVFU1RfTU9WSUVfREVUQUlMU19GQUlMRURfQUNUSU9OOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZXJyb3I6IGFjdGlvbi5lcnJvcixcbiAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICB9O1xuICAgIH1cblxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==