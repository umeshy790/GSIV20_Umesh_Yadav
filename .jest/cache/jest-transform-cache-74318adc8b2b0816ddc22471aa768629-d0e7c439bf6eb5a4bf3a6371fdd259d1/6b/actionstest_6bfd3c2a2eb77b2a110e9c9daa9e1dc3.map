{"version":3,"sources":["actions-test.ts"],"names":["describe","it","error","movies","movie","id","original_language","original_title","overview","release_date","title","vote_average","adult","backdrop_path","genre_ids","popularity","poster_path","video","vote_count","page","requestUpcomingMovieAction","type","types","REQUEST_UPCOMING_MOVIES_ACTION","expect","actions","requestUpcomingMoviesAction","toEqual","requestUpcomingMovieSuccessAction","REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION","payload","data","isFetchedMore","requestUpcomingMoviesSuccessAction","requestUpcomingMovieFailedAction","REQUEST_UPCOMING_MOVIES_FAILED_ACTION","requestUpcomingMoviesFailedAction","requestMovieDetailAction","REQUEST_MOVIE_DETAILS_ACTION","requestMovieDetailSuccessAction","REQUEST_MOVIE_DETAILS_SUCCESS_ACTION","requestMovieDetailFailedAction","REQUEST_MOVIE_DETAILS_FAILED_ACTION"],"mappings":"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","sourcesContent":["import * as types from '../src/types/types';\nimport * as actions from '../src/action/actions';\nimport {Movie} from '../src/modal/modals';\n\ndescribe('actions', () => {\n  it('should create a actions', () => {\n    const error: string = 'Some error';\n    const movies: Movie[] = [];\n    const movie: Movie = {\n      id: 1212,\n      original_language: 'en',\n      original_title: 'dummy',\n      overview: 121,\n      release_date: 112,\n      title: 'dummy',\n      vote_average: 1212,\n      adult: false,\n      backdrop_path: '',\n      genre_ids: [121, 22],\n      popularity: 4.3,\n      poster_path: 'fjfjd',\n      video: false,\n      vote_count: 121,\n    };\n    const id: number = 1212;\n\n    describe('request movie action', () => {\n      const page = 1;\n      const requestUpcomingMovieAction = {\n        type: types.REQUEST_UPCOMING_MOVIES_ACTION,\n        page: page,\n      };\n      expect(actions.requestUpcomingMoviesAction(page)).toEqual(\n        requestUpcomingMovieAction,\n      );\n    });\n\n    describe('request movie success action', () => {\n      const requestUpcomingMovieSuccessAction = {\n        type: types.REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION,\n        payload: {\n          data: movies,\n          isFetchedMore: false,\n        },\n      };\n      expect(\n        actions.requestUpcomingMoviesSuccessAction({\n          data: movies,\n          isFetchedMore: false,\n        }),\n      ).toEqual(requestUpcomingMovieSuccessAction);\n    });\n\n    describe('request movie failed action', () => {\n      const requestUpcomingMovieFailedAction = {\n        type: types.REQUEST_UPCOMING_MOVIES_FAILED_ACTION,\n        error,\n      };\n      expect(actions.requestUpcomingMoviesFailedAction(error)).toEqual(\n        requestUpcomingMovieFailedAction,\n      );\n    });\n\n    describe('request movie detail action', () => {\n      const requestMovieDetailAction = {\n        type: types.REQUEST_MOVIE_DETAILS_ACTION,\n        id: id,\n      };\n      expect(actions.requestMovieDetailAction(id)).toEqual(\n        requestMovieDetailAction,\n      );\n    });\n\n    describe('request movie detail success action', () => {\n      const requestMovieDetailSuccessAction = {\n        type: types.REQUEST_MOVIE_DETAILS_SUCCESS_ACTION,\n        data: movie,\n      };\n      expect(actions.requestMovieDetailSuccessAction(movie)).toEqual(\n        requestMovieDetailSuccessAction,\n      );\n    });\n\n    describe('request movie detail failed action', () => {\n      const requestMovieDetailFailedAction = {\n        type: types.REQUEST_MOVIE_DETAILS_FAILED_ACTION,\n        error: error,\n      };\n      expect(actions.requestMovieDetailFailedAction(error)).toEqual(\n        requestMovieDetailFailedAction,\n      );\n    });\n  });\n});\n"]}