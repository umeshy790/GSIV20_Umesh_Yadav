{"version":3,"sources":["TouchableWithoutFeedback.js"],"names":["PASSTHROUGH_PROPS","TouchableWithoutFeedback","state","pressability","Pressability","getHitSlop","props","hitSlop","getLongPressDelayMS","delayLongPress","maybeNumber","getPressDelayMS","delayPressIn","getPressOutDelayMS","delayPressOut","getPressRectOffset","pressRetentionOffset","getTouchSoundDisabled","touchSoundDisabled","onBlur","event","onFocus","onLongPress","onPress","onPressIn","onPressOut","onResponderTerminationRequest","rejectResponderTermination","onStartShouldSetResponder","disabled","element","React","Children","only","children","__DEV__","type","View","push","getEventHandlers","eventHandlersWithoutBlurAndFocus","elementProps","accessible","focusable","undefined","prop","cloneElement","Platform","isTV","_tvTouchable","TVTouchable","getDisabled","destroy","reset","Component","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Pressability from '../../Pressability/Pressability.js';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug.js';\nimport TVTouchable from './TVTouchable.js';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../../Components/View/ViewAccessibility';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  LayoutEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport Platform from '../../Utilities/Platform';\nimport View from '../../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  accessibilityViewIsModal?: ?boolean,\n  accessible?: ?boolean,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  focusable?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  nativeID?: ?string,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n  onBlur?: ?(event: BlurEvent) => mixed,\n  onFocus?: ?(event: FocusEvent) => mixed,\n  onLayout?: ?(event: LayoutEvent) => mixed,\n  onLongPress?: ?(event: PressEvent) => mixed,\n  onPress?: ?(event: PressEvent) => mixed,\n  onPressIn?: ?(event: PressEvent) => mixed,\n  onPressOut?: ?(event: PressEvent) => mixed,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n  touchSoundDisabled?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nconst PASSTHROUGH_PROPS = [\n  'accessibilityActions',\n  'accessibilityElementsHidden',\n  'accessibilityHint',\n  'accessibilityIgnoresInvertColors',\n  'accessibilityLabel',\n  'accessibilityLiveRegion',\n  'accessibilityRole',\n  'accessibilityState',\n  'accessibilityValue',\n  'accessibilityViewIsModal',\n  'hitSlop',\n  'importantForAccessibility',\n  'nativeID',\n  'onAccessibilityAction',\n  'onBlur',\n  'onFocus',\n  'onLayout',\n  'testID',\n];\n\nclass TouchableWithoutFeedback extends React.Component<Props, State> {\n  _tvTouchable: ?TVTouchable;\n\n  state: State = {\n    pressability: new Pressability({\n      getHitSlop: () => this.props.hitSlop,\n      getLongPressDelayMS: () => {\n        if (this.props.delayLongPress != null) {\n          const maybeNumber = this.props.delayLongPress;\n          if (typeof maybeNumber === 'number') {\n            return maybeNumber;\n          }\n        }\n        return 500;\n      },\n      getPressDelayMS: () => this.props.delayPressIn,\n      getPressOutDelayMS: () => this.props.delayPressOut,\n      getPressRectOffset: () => this.props.pressRetentionOffset,\n      getTouchSoundDisabled: () => this.props.touchSoundDisabled,\n      onBlur: event => {\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: event => {\n        if (this.props.onLongPress != null) {\n          this.props.onLongPress(event);\n        }\n      },\n      onPress: event => {\n        if (this.props.onPress != null) {\n          this.props.onPress(event);\n        }\n      },\n      onPressIn: event => {\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n      onResponderTerminationRequest: () =>\n        !this.props.rejectResponderTermination,\n      onStartShouldSetResponder: () => !this.props.disabled,\n    }),\n  };\n\n  render(): React.Node {\n    const element = React.Children.only(this.props.children);\n    const children = [element.props.children];\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"red\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {\n      onBlur,\n      onFocus,\n      ...eventHandlersWithoutBlurAndFocus\n    } = this.state.pressability.getEventHandlers();\n\n    const elementProps: {[string]: mixed, ...} = {\n      ...eventHandlersWithoutBlurAndFocus,\n      accessible: this.props.accessible !== false,\n      focusable:\n        this.props.focusable !== false && this.props.onPress !== undefined,\n    };\n    for (const prop of PASSTHROUGH_PROPS) {\n      if (this.props[prop] !== undefined) {\n        elementProps[prop] = this.props[prop];\n      }\n    }\n\n    return React.cloneElement(element, elementProps, ...children);\n  }\n\n  componentDidMount(): void {\n    if (Platform.isTV) {\n      this._tvTouchable = new TVTouchable(this, {\n        getDisabled: () => this.props.disabled === true,\n        onBlur: event => {\n          if (this.props.onBlur != null) {\n            this.props.onBlur(event);\n          }\n        },\n        onFocus: event => {\n          if (this.props.onFocus != null) {\n            this.props.onFocus(event);\n          }\n        },\n        onPress: event => {\n          if (this.props.onPress != null) {\n            this.props.onPress(event);\n          }\n        },\n      });\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.isTV) {\n      if (this._tvTouchable != null) {\n        this._tvTouchable.destroy();\n      }\n    }\n    this.state.pressability.reset();\n  }\n}\n\nmodule.exports = TouchableWithoutFeedback;\n"]}