91bb7d07a16eba2a6328f2bd4652dad3
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var types = _interopRequireWildcard(require("../src/types/types"));

var actions = _interopRequireWildcard(require("../src/action/actions"));

describe('actions', function () {
  it('should create a actions', function () {
    var error = 'Some error';
    var movies = [];
    var movie = null;
    var id = 1212;
    var requestUpcomingMovieAction = {
      type: types.REQUEST_UPCOMING_MOVIES_ACTION
    };
    expect(actions.requestUpcomingMoviesAction()).toEqual(requestUpcomingMovieAction);
    var requestUpcomingMovieSuccessAction = {
      type: types.REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION,
      data: movies
    };
    expect(actions.requestUpcomingMoviesSuccessAction(movies)).toEqual(requestUpcomingMovieSuccessAction);
    var requestUpcomingMovieFailedAction = {
      type: types.REQUEST_UPCOMING_MOVIES_FAILED_ACTION,
      error: error
    };
    expect(actions.requestUpcomingMoviesFailedAction(error)).toEqual(requestUpcomingMovieFailedAction);
    var requestMovieDetailAction = {
      type: types.REQUEST_MOVIE_DETAILS_ACTION,
      id: id
    };
    expect(actions.requestMovieDetailAction(id)).toEqual(requestMovieDetailAction);
    var requestMovieDetailSuccessAction = {
      type: types.REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION,
      data: movie
    };
    expect(actions.requestMovieDetailSuccessAction(movie)).toEqual(requestMovieDetailSuccessAction);
    var requestMovieDetailFailedAction = {
      type: types.REQUEST_UPCOMING_MOVIES_FAILED_ACTION,
      error: error
    };
    expect(actions.requestMovieDetailFailedAction(error)).toEqual(requestMovieDetailFailedAction);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMtdGVzdC50cyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZXJyb3IiLCJtb3ZpZXMiLCJtb3ZpZSIsImlkIiwicmVxdWVzdFVwY29taW5nTW92aWVBY3Rpb24iLCJ0eXBlIiwidHlwZXMiLCJSRVFVRVNUX1VQQ09NSU5HX01PVklFU19BQ1RJT04iLCJleHBlY3QiLCJhY3Rpb25zIiwicmVxdWVzdFVwY29taW5nTW92aWVzQWN0aW9uIiwidG9FcXVhbCIsInJlcXVlc3RVcGNvbWluZ01vdmllU3VjY2Vzc0FjdGlvbiIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OIiwiZGF0YSIsInJlcXVlc3RVcGNvbWluZ01vdmllc1N1Y2Nlc3NBY3Rpb24iLCJyZXF1ZXN0VXBjb21pbmdNb3ZpZUZhaWxlZEFjdGlvbiIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0ZBSUxFRF9BQ1RJT04iLCJyZXF1ZXN0VXBjb21pbmdNb3ZpZXNGYWlsZWRBY3Rpb24iLCJyZXF1ZXN0TW92aWVEZXRhaWxBY3Rpb24iLCJSRVFVRVNUX01PVklFX0RFVEFJTFNfQUNUSU9OIiwicmVxdWVzdE1vdmllRGV0YWlsU3VjY2Vzc0FjdGlvbiIsInJlcXVlc3RNb3ZpZURldGFpbEZhaWxlZEFjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFHQUEsUUFBUSxDQUFDLFNBQUQsRUFBWSxZQUFNO0FBQ3hCQyxFQUFBQSxFQUFFLENBQUMseUJBQUQsRUFBNEIsWUFBTTtBQUNsQyxRQUFNQyxLQUFhLEdBQUcsWUFBdEI7QUFDQSxRQUFNQyxNQUFlLEdBQUcsRUFBeEI7QUFDQSxRQUFNQyxLQUFZLEdBQUcsSUFBckI7QUFDQSxRQUFNQyxFQUFVLEdBQUcsSUFBbkI7QUFFQSxRQUFNQywwQkFBMEIsR0FBRztBQUNqQ0MsTUFBQUEsSUFBSSxFQUFFQyxLQUFLLENBQUNDO0FBRHFCLEtBQW5DO0FBR0FDLElBQUFBLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQywyQkFBUixFQUFELENBQU4sQ0FBOENDLE9BQTlDLENBQ0VQLDBCQURGO0FBSUEsUUFBTVEsaUNBQWlDLEdBQUc7QUFDeENQLE1BQUFBLElBQUksRUFBRUMsS0FBSyxDQUFDTyxzQ0FENEI7QUFFeENDLE1BQUFBLElBQUksRUFBRWI7QUFGa0MsS0FBMUM7QUFJQU8sSUFBQUEsTUFBTSxDQUFDQyxPQUFPLENBQUNNLGtDQUFSLENBQTJDZCxNQUEzQyxDQUFELENBQU4sQ0FBMkRVLE9BQTNELENBQ0VDLGlDQURGO0FBSUEsUUFBTUksZ0NBQWdDLEdBQUc7QUFDdkNYLE1BQUFBLElBQUksRUFBRUMsS0FBSyxDQUFDVyxxQ0FEMkI7QUFFdkNqQixNQUFBQSxLQUFLLEVBQUxBO0FBRnVDLEtBQXpDO0FBSUFRLElBQUFBLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDUyxpQ0FBUixDQUEwQ2xCLEtBQTFDLENBQUQsQ0FBTixDQUF5RFcsT0FBekQsQ0FDRUssZ0NBREY7QUFJQSxRQUFNRyx3QkFBd0IsR0FBRztBQUMvQmQsTUFBQUEsSUFBSSxFQUFFQyxLQUFLLENBQUNjLDRCQURtQjtBQUUvQmpCLE1BQUFBLEVBQUUsRUFBRUE7QUFGMkIsS0FBakM7QUFJQUssSUFBQUEsTUFBTSxDQUFDQyxPQUFPLENBQUNVLHdCQUFSLENBQWlDaEIsRUFBakMsQ0FBRCxDQUFOLENBQTZDUSxPQUE3QyxDQUNFUSx3QkFERjtBQUlBLFFBQU1FLCtCQUErQixHQUFHO0FBQ3RDaEIsTUFBQUEsSUFBSSxFQUFFQyxLQUFLLENBQUNPLHNDQUQwQjtBQUV0Q0MsTUFBQUEsSUFBSSxFQUFFWjtBQUZnQyxLQUF4QztBQUlBTSxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ1ksK0JBQVIsQ0FBd0NuQixLQUF4QyxDQUFELENBQU4sQ0FBdURTLE9BQXZELENBQ0VVLCtCQURGO0FBSUEsUUFBTUMsOEJBQThCLEdBQUc7QUFDckNqQixNQUFBQSxJQUFJLEVBQUVDLEtBQUssQ0FBQ1cscUNBRHlCO0FBRXJDakIsTUFBQUEsS0FBSyxFQUFFQTtBQUY4QixLQUF2QztBQUlBUSxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ2EsOEJBQVIsQ0FBdUN0QixLQUF2QyxDQUFELENBQU4sQ0FBc0RXLE9BQXRELENBQ0VXLDhCQURGO0FBR0QsR0FwREMsQ0FBRjtBQXFERCxDQXRETyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vc3JjL3R5cGVzL3R5cGVzJztcbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSAnLi4vc3JjL2FjdGlvbi9hY3Rpb25zJztcbmltcG9ydCB7TW92aWV9IGZyb20gJy4uL3NyYy9tb2RhbC9tb2RhbHMnO1xuXG5kZXNjcmliZSgnYWN0aW9ucycsICgpID0+IHtcbiAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBhY3Rpb25zJywgKCkgPT4ge1xuICAgIGNvbnN0IGVycm9yOiBzdHJpbmcgPSAnU29tZSBlcnJvcic7XG4gICAgY29uc3QgbW92aWVzOiBNb3ZpZVtdID0gW107XG4gICAgY29uc3QgbW92aWU6IE1vdmllID0gbnVsbDtcbiAgICBjb25zdCBpZDogbnVtYmVyID0gMTIxMjtcblxuICAgIGNvbnN0IHJlcXVlc3RVcGNvbWluZ01vdmllQWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZXMuUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfQUNUSU9OLFxuICAgIH07XG4gICAgZXhwZWN0KGFjdGlvbnMucmVxdWVzdFVwY29taW5nTW92aWVzQWN0aW9uKCkpLnRvRXF1YWwoXG4gICAgICByZXF1ZXN0VXBjb21pbmdNb3ZpZUFjdGlvbixcbiAgICApO1xuXG4gICAgY29uc3QgcmVxdWVzdFVwY29taW5nTW92aWVTdWNjZXNzQWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZXMuUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfU1VDQ0VTU19BQ1RJT04sXG4gICAgICBkYXRhOiBtb3ZpZXMsXG4gICAgfTtcbiAgICBleHBlY3QoYWN0aW9ucy5yZXF1ZXN0VXBjb21pbmdNb3ZpZXNTdWNjZXNzQWN0aW9uKG1vdmllcykpLnRvRXF1YWwoXG4gICAgICByZXF1ZXN0VXBjb21pbmdNb3ZpZVN1Y2Nlc3NBY3Rpb24sXG4gICAgKTtcblxuICAgIGNvbnN0IHJlcXVlc3RVcGNvbWluZ01vdmllRmFpbGVkQWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZXMuUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfRkFJTEVEX0FDVElPTixcbiAgICAgIGVycm9yLFxuICAgIH07XG4gICAgZXhwZWN0KGFjdGlvbnMucmVxdWVzdFVwY29taW5nTW92aWVzRmFpbGVkQWN0aW9uKGVycm9yKSkudG9FcXVhbChcbiAgICAgIHJlcXVlc3RVcGNvbWluZ01vdmllRmFpbGVkQWN0aW9uLFxuICAgICk7XG5cbiAgICBjb25zdCByZXF1ZXN0TW92aWVEZXRhaWxBY3Rpb24gPSB7XG4gICAgICB0eXBlOiB0eXBlcy5SRVFVRVNUX01PVklFX0RFVEFJTFNfQUNUSU9OLFxuICAgICAgaWQ6IGlkLFxuICAgIH07XG4gICAgZXhwZWN0KGFjdGlvbnMucmVxdWVzdE1vdmllRGV0YWlsQWN0aW9uKGlkKSkudG9FcXVhbChcbiAgICAgIHJlcXVlc3RNb3ZpZURldGFpbEFjdGlvbixcbiAgICApO1xuXG4gICAgY29uc3QgcmVxdWVzdE1vdmllRGV0YWlsU3VjY2Vzc0FjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVzLlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OLFxuICAgICAgZGF0YTogbW92aWUsXG4gICAgfTtcbiAgICBleHBlY3QoYWN0aW9ucy5yZXF1ZXN0TW92aWVEZXRhaWxTdWNjZXNzQWN0aW9uKG1vdmllKSkudG9FcXVhbChcbiAgICAgIHJlcXVlc3RNb3ZpZURldGFpbFN1Y2Nlc3NBY3Rpb24sXG4gICAgKTtcblxuICAgIGNvbnN0IHJlcXVlc3RNb3ZpZURldGFpbEZhaWxlZEFjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVzLlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0ZBSUxFRF9BQ1RJT04sXG4gICAgICBlcnJvcjogZXJyb3IsXG4gICAgfTtcbiAgICBleHBlY3QoYWN0aW9ucy5yZXF1ZXN0TW92aWVEZXRhaWxGYWlsZWRBY3Rpb24oZXJyb3IpKS50b0VxdWFsKFxuICAgICAgcmVxdWVzdE1vdmllRGV0YWlsRmFpbGVkQWN0aW9uLFxuICAgICk7XG4gIH0pO1xufSk7XG4iXX0=