{"version":3,"sources":["MovieDetails.tsx"],"names":["selectState","state","movieDetailReducer","MovieDetails","error","loading","movie","styles","container","alignItems","justifyContent","flex","image","uri","poster_path","paddingTop","flexDirection","title","popularity","vote_average","description","release_date","runtime","overview","StyleSheet","create","backgroundColor","padding","height","undefined","resizeMode","fontSize","fontWeight","color","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {StyleSheet,Image, Text,ScrollView, View, ActivityIndicator} from 'react-native';\nimport {RootState} from '../store';\nimport {useSelector} from 'react-redux';\nimport { formateDate } from '../utils';\n\nconst selectState = (state: RootState) => state.movieDetailReducer;\n\nconst MovieDetails = () => {\n  const { error, loading, movie } = useSelector(selectState);\n\n  if(loading) {\n    return (\n      <View\n        style={{\n          ...styles.container,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n   if (error) {\n    return (\n      <View\n        style={{\n          ...styles.container,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text>{error}</Text>\n      </View>\n    );\n  }\n  \n  if (!movie) {\n    return null\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{flex : 1}}>\n        <Image style={styles.image}\n             source={{\n              uri: `http://image.tmdb.org/t/p/original${movie?.poster_path}`\n            }}></Image>\n      </View>\n      <ScrollView style={{flex : 1, paddingTop : 10}}>\n        <View style={{ flexDirection: 'row', alignItems : 'center' }}>\n          <Text style={styles.title}>{movie.title}</Text>\n          <Text style={styles.popularity}>({movie.vote_average})</Text>\n        </View>\n        \n        <View style={{paddingTop : 15}}>\n          <Text style={styles.description}>{movie.release_date} | {formateDate(movie.runtime)}</Text>\n          <Text style={styles.description}>Cast : Actor 1 | Actor 2</Text>\n          <Text style={{ ...styles.description, paddingTop : 16 }}>{movie.overview}</Text>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default MovieDetails;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    padding : 10\n  },\n  image: {\n    flex : 1,\n    height: undefined,\n    resizeMode: 'cover'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '500',\n    color:\"#4a4a4a\"\n  },\n  popularity: {\n    fontSize: 16,\n    paddingLeft: 5,\n    color : '#9b9b9b'\n  },\n  description: {\n    fontSize: 16,\n    color:\"#4a4a4a\"\n  }\n});\n"]}