288a4f6ce9c330302ad511d8f2d72fa8
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var types = _interopRequireWildcard(require("../src/types/types"));

var actions = _interopRequireWildcard(require("../src/action/actions"));

describe('actions', function () {
  it('should create a actions', function () {
    var error = 'Some error';
    var movies = [];
    var movie = null;
    var id = 1212;
    var requestUpcomingMovieAction = {
      type: types.REQUEST_UPCOMING_MOVIES_ACTION
    };
    expect(actions.requestUpcomingMoviesAction()).toEqual(requestUpcomingMovieAction);
    var requestUpcomingMovieSuccessAction = {
      type: types.REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION,
      data: movies
    };
    expect(actions.requestUpcomingMoviesSuccessAction(movies)).toEqual(requestUpcomingMovieSuccessAction);
    var requestUpcomingMovieFailedAction = {
      type: types.REQUEST_UPCOMING_MOVIES_FAILED_ACTION,
      error: error
    };
    expect(actions.requestUpcomingMoviesFailedAction(error)).toEqual(requestUpcomingMovieFailedAction);
    var requestMovieDetailAction = {
      type: types.REQUEST_MOVIE_DETAILS_ACTION,
      id: id
    };
    expect(actions.requestMovieDetailAction(id)).toEqual(requestMovieDetailAction);
    var requestMovieDetailSuccessAction = {
      type: types.REQUEST_MOVIE_DETAILS_SUCCESS_ACTION,
      data: movie
    };
    expect(actions.requestMovieDetailSuccessAction(movie)).toEqual(requestMovieDetailSuccessAction);
    var requestMovieDetailFailedAction = {
      type: types.REQUEST_MOVIE_DETAILS_FAILED_ACTION,
      error: error
    };
    expect(actions.requestMovieDetailFailedAction(error)).toEqual(requestMovieDetailFailedAction);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMtdGVzdC50cyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZXJyb3IiLCJtb3ZpZXMiLCJtb3ZpZSIsImlkIiwicmVxdWVzdFVwY29taW5nTW92aWVBY3Rpb24iLCJ0eXBlIiwidHlwZXMiLCJSRVFVRVNUX1VQQ09NSU5HX01PVklFU19BQ1RJT04iLCJleHBlY3QiLCJhY3Rpb25zIiwicmVxdWVzdFVwY29taW5nTW92aWVzQWN0aW9uIiwidG9FcXVhbCIsInJlcXVlc3RVcGNvbWluZ01vdmllU3VjY2Vzc0FjdGlvbiIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OIiwiZGF0YSIsInJlcXVlc3RVcGNvbWluZ01vdmllc1N1Y2Nlc3NBY3Rpb24iLCJyZXF1ZXN0VXBjb21pbmdNb3ZpZUZhaWxlZEFjdGlvbiIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0ZBSUxFRF9BQ1RJT04iLCJyZXF1ZXN0VXBjb21pbmdNb3ZpZXNGYWlsZWRBY3Rpb24iLCJyZXF1ZXN0TW92aWVEZXRhaWxBY3Rpb24iLCJSRVFVRVNUX01PVklFX0RFVEFJTFNfQUNUSU9OIiwicmVxdWVzdE1vdmllRGV0YWlsU3VjY2Vzc0FjdGlvbiIsIlJFUVVFU1RfTU9WSUVfREVUQUlMU19TVUNDRVNTX0FDVElPTiIsInJlcXVlc3RNb3ZpZURldGFpbEZhaWxlZEFjdGlvbiIsIlJFUVVFU1RfTU9WSUVfREVUQUlMU19GQUlMRURfQUNUSU9OIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUdBQSxRQUFRLENBQUMsU0FBRCxFQUFZLFlBQU07QUFDeEJDLEVBQUFBLEVBQUUsQ0FBQyx5QkFBRCxFQUE0QixZQUFNO0FBQ2xDLFFBQU1DLEtBQWEsR0FBRyxZQUF0QjtBQUNBLFFBQU1DLE1BQWUsR0FBRyxFQUF4QjtBQUNBLFFBQU1DLEtBQVksR0FBRyxJQUFyQjtBQUNBLFFBQU1DLEVBQVUsR0FBRyxJQUFuQjtBQUVBLFFBQU1DLDBCQUEwQixHQUFHO0FBQ2pDQyxNQUFBQSxJQUFJLEVBQUVDLEtBQUssQ0FBQ0M7QUFEcUIsS0FBbkM7QUFHQUMsSUFBQUEsTUFBTSxDQUFDQyxPQUFPLENBQUNDLDJCQUFSLEVBQUQsQ0FBTixDQUE4Q0MsT0FBOUMsQ0FDRVAsMEJBREY7QUFJQSxRQUFNUSxpQ0FBaUMsR0FBRztBQUN4Q1AsTUFBQUEsSUFBSSxFQUFFQyxLQUFLLENBQUNPLHNDQUQ0QjtBQUV4Q0MsTUFBQUEsSUFBSSxFQUFFYjtBQUZrQyxLQUExQztBQUlBTyxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ00sa0NBQVIsQ0FBMkNkLE1BQTNDLENBQUQsQ0FBTixDQUEyRFUsT0FBM0QsQ0FDRUMsaUNBREY7QUFJQSxRQUFNSSxnQ0FBZ0MsR0FBRztBQUN2Q1gsTUFBQUEsSUFBSSxFQUFFQyxLQUFLLENBQUNXLHFDQUQyQjtBQUV2Q2pCLE1BQUFBLEtBQUssRUFBTEE7QUFGdUMsS0FBekM7QUFJQVEsSUFBQUEsTUFBTSxDQUFDQyxPQUFPLENBQUNTLGlDQUFSLENBQTBDbEIsS0FBMUMsQ0FBRCxDQUFOLENBQXlEVyxPQUF6RCxDQUNFSyxnQ0FERjtBQUlBLFFBQU1HLHdCQUF3QixHQUFHO0FBQy9CZCxNQUFBQSxJQUFJLEVBQUVDLEtBQUssQ0FBQ2MsNEJBRG1CO0FBRS9CakIsTUFBQUEsRUFBRSxFQUFFQTtBQUYyQixLQUFqQztBQUlBSyxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ1Usd0JBQVIsQ0FBaUNoQixFQUFqQyxDQUFELENBQU4sQ0FBNkNRLE9BQTdDLENBQ0VRLHdCQURGO0FBSUEsUUFBTUUsK0JBQStCLEdBQUc7QUFDdENoQixNQUFBQSxJQUFJLEVBQUVDLEtBQUssQ0FBQ2dCLG9DQUQwQjtBQUV0Q1IsTUFBQUEsSUFBSSxFQUFFWjtBQUZnQyxLQUF4QztBQUlBTSxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ1ksK0JBQVIsQ0FBd0NuQixLQUF4QyxDQUFELENBQU4sQ0FBdURTLE9BQXZELENBQ0VVLCtCQURGO0FBSUEsUUFBTUUsOEJBQThCLEdBQUc7QUFDckNsQixNQUFBQSxJQUFJLEVBQUVDLEtBQUssQ0FBQ2tCLG1DQUR5QjtBQUVyQ3hCLE1BQUFBLEtBQUssRUFBRUE7QUFGOEIsS0FBdkM7QUFJQVEsSUFBQUEsTUFBTSxDQUFDQyxPQUFPLENBQUNjLDhCQUFSLENBQXVDdkIsS0FBdkMsQ0FBRCxDQUFOLENBQXNEVyxPQUF0RCxDQUNFWSw4QkFERjtBQUdELEdBcERDLENBQUY7QUFxREQsQ0F0RE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL3NyYy90eXBlcy90eXBlcyc7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL3NyYy9hY3Rpb24vYWN0aW9ucyc7XG5pbXBvcnQge01vdmllfSBmcm9tICcuLi9zcmMvbW9kYWwvbW9kYWxzJztcblxuZGVzY3JpYmUoJ2FjdGlvbnMnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgY3JlYXRlIGEgYWN0aW9ucycsICgpID0+IHtcbiAgICBjb25zdCBlcnJvcjogc3RyaW5nID0gJ1NvbWUgZXJyb3InO1xuICAgIGNvbnN0IG1vdmllczogTW92aWVbXSA9IFtdO1xuICAgIGNvbnN0IG1vdmllOiBNb3ZpZSA9IG51bGw7XG4gICAgY29uc3QgaWQ6IG51bWJlciA9IDEyMTI7XG5cbiAgICBjb25zdCByZXF1ZXN0VXBjb21pbmdNb3ZpZUFjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVzLlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0FDVElPTixcbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnJlcXVlc3RVcGNvbWluZ01vdmllc0FjdGlvbigpKS50b0VxdWFsKFxuICAgICAgcmVxdWVzdFVwY29taW5nTW92aWVBY3Rpb24sXG4gICAgKTtcblxuICAgIGNvbnN0IHJlcXVlc3RVcGNvbWluZ01vdmllU3VjY2Vzc0FjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVzLlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OLFxuICAgICAgZGF0YTogbW92aWVzLFxuICAgIH07XG4gICAgZXhwZWN0KGFjdGlvbnMucmVxdWVzdFVwY29taW5nTW92aWVzU3VjY2Vzc0FjdGlvbihtb3ZpZXMpKS50b0VxdWFsKFxuICAgICAgcmVxdWVzdFVwY29taW5nTW92aWVTdWNjZXNzQWN0aW9uLFxuICAgICk7XG5cbiAgICBjb25zdCByZXF1ZXN0VXBjb21pbmdNb3ZpZUZhaWxlZEFjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVzLlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0ZBSUxFRF9BQ1RJT04sXG4gICAgICBlcnJvcixcbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnJlcXVlc3RVcGNvbWluZ01vdmllc0ZhaWxlZEFjdGlvbihlcnJvcikpLnRvRXF1YWwoXG4gICAgICByZXF1ZXN0VXBjb21pbmdNb3ZpZUZhaWxlZEFjdGlvbixcbiAgICApO1xuXG4gICAgY29uc3QgcmVxdWVzdE1vdmllRGV0YWlsQWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZXMuUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX0FDVElPTixcbiAgICAgIGlkOiBpZCxcbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnJlcXVlc3RNb3ZpZURldGFpbEFjdGlvbihpZCkpLnRvRXF1YWwoXG4gICAgICByZXF1ZXN0TW92aWVEZXRhaWxBY3Rpb24sXG4gICAgKTtcblxuICAgIGNvbnN0IHJlcXVlc3RNb3ZpZURldGFpbFN1Y2Nlc3NBY3Rpb24gPSB7XG4gICAgICB0eXBlOiB0eXBlcy5SRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT04sXG4gICAgICBkYXRhOiBtb3ZpZSxcbiAgICB9O1xuICAgIGV4cGVjdChhY3Rpb25zLnJlcXVlc3RNb3ZpZURldGFpbFN1Y2Nlc3NBY3Rpb24obW92aWUpKS50b0VxdWFsKFxuICAgICAgcmVxdWVzdE1vdmllRGV0YWlsU3VjY2Vzc0FjdGlvbixcbiAgICApO1xuXG4gICAgY29uc3QgcmVxdWVzdE1vdmllRGV0YWlsRmFpbGVkQWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZXMuUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX0ZBSUxFRF9BQ1RJT04sXG4gICAgICBlcnJvcjogZXJyb3IsXG4gICAgfTtcbiAgICBleHBlY3QoYWN0aW9ucy5yZXF1ZXN0TW92aWVEZXRhaWxGYWlsZWRBY3Rpb24oZXJyb3IpKS50b0VxdWFsKFxuICAgICAgcmVxdWVzdE1vdmllRGV0YWlsRmFpbGVkQWN0aW9uLFxuICAgICk7XG4gIH0pO1xufSk7XG4iXX0=