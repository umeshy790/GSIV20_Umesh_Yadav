7fe1e7f632b46426b75dcb95812f83cc
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _MovieCard = _interopRequireDefault(require("../src/components/MovieCard"));

var _MovieDetails = _interopRequireDefault(require("../src/components/MovieDetails"));

var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));

var _reactRedux = require("react-redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _App = _interopRequireDefault(require("../App"));

var mockStore = (0, _reduxMockStore.default)([_reduxThunk.default]);
describe('Component tests', function () {
  describe('Movie Card Test', function () {
    var movie = {
      id: 1212,
      original_language: 'en',
      original_title: 'dummy',
      overview: 121,
      release_date: 112,
      title: 'dummy',
      vote_average: 1212,
      adult: false,
      backdrop_path: '',
      genre_ids: [121, 22],
      popularity: 4.3,
      poster_path: 'fjfjd',
      video: false,
      vote_count: 121
    };
    it('should match to snapShot', function () {
      var tree = _reactTestRenderer.default.create(_react.default.createElement(_MovieCard.default, {
        movie: movie
      })).toJSON();

      expect(tree).toMatchSnapshot();
    });
  });
  describe('should match to snapshot', function () {
    var store = mockStore({
      movieDetailReducer: {
        error: null,
        loadiing: false,
        movie: {}
      }
    });

    var tree = _reactTestRenderer.default.create(_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, _react.default.createElement(_MovieDetails.default, null))).toJSON();

    expect(tree).toMatchInlineSnapshot("\n      <View\n        style={\n          Object {\n            \"backgroundColor\": \"#ffffff\",\n            \"flex\": 1,\n            \"padding\": 10,\n          }\n        }\n      >\n        <View\n          style={\n            Object {\n              \"flex\": 1,\n            }\n          }\n        >\n          <Image\n            source={\n              Object {\n                \"uri\": \"http://image.tmdb.org/t/p/originalundefined\",\n              }\n            }\n            style={\n              Object {\n                \"flex\": 1,\n                \"height\": undefined,\n                \"resizeMode\": \"cover\",\n              }\n            }\n          />\n        </View>\n        <RCTScrollView\n          style={\n            Object {\n              \"flex\": 1,\n              \"paddingTop\": 10,\n            }\n          }\n        >\n          <View>\n            <View\n              style={\n                Object {\n                  \"alignItems\": \"center\",\n                  \"flexDirection\": \"row\",\n                }\n              }\n            >\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 18,\n                    \"fontWeight\": \"500\",\n                  }\n                }\n              />\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#9b9b9b\",\n                    \"fontSize\": 16,\n                    \"paddingLeft\": 5,\n                  }\n                }\n              >\n                (\n                )\n              </Text>\n            </View>\n            <View\n              style={\n                Object {\n                  \"paddingTop\": 15,\n                }\n              }\n            >\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                  }\n                }\n              >\n                 | \n                NaN:NaN\n              </Text>\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                  }\n                }\n              >\n                Cast : Actor 1 | Actor 2\n              </Text>\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                    \"paddingTop\": 16,\n                  }\n                }\n              />\n            </View>\n          </View>\n        </RCTScrollView>\n      </View>\n    ");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMtdGVzdC5qcyJdLCJuYW1lcyI6WyJtb2NrU3RvcmUiLCJ0aHVuayIsImRlc2NyaWJlIiwibW92aWUiLCJpZCIsIm9yaWdpbmFsX2xhbmd1YWdlIiwib3JpZ2luYWxfdGl0bGUiLCJvdmVydmlldyIsInJlbGVhc2VfZGF0ZSIsInRpdGxlIiwidm90ZV9hdmVyYWdlIiwiYWR1bHQiLCJiYWNrZHJvcF9wYXRoIiwiZ2VucmVfaWRzIiwicG9wdWxhcml0eSIsInBvc3Rlcl9wYXRoIiwidmlkZW8iLCJ2b3RlX2NvdW50IiwiaXQiLCJ0cmVlIiwicmVuZGVyZXIiLCJjcmVhdGUiLCJ0b0pTT04iLCJleHBlY3QiLCJ0b01hdGNoU25hcHNob3QiLCJzdG9yZSIsIm1vdmllRGV0YWlsUmVkdWNlciIsImVycm9yIiwibG9hZGlpbmciLCJ0b01hdGNoSW5saW5lU25hcHNob3QiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLDZCQUFtQixDQUFDQyxtQkFBRCxDQUFuQixDQUFsQjtBQUVBQyxRQUFRLENBQUMsaUJBQUQsRUFBb0IsWUFBTTtBQVFoQ0EsRUFBQUEsUUFBUSxDQUFDLGlCQUFELEVBQW9CLFlBQU07QUFDaEMsUUFBTUMsS0FBSyxHQUFHO0FBQ1pDLE1BQUFBLEVBQUUsRUFBRSxJQURRO0FBRVpDLE1BQUFBLGlCQUFpQixFQUFFLElBRlA7QUFHWkMsTUFBQUEsY0FBYyxFQUFFLE9BSEo7QUFJWkMsTUFBQUEsUUFBUSxFQUFFLEdBSkU7QUFLWkMsTUFBQUEsWUFBWSxFQUFFLEdBTEY7QUFNWkMsTUFBQUEsS0FBSyxFQUFFLE9BTks7QUFPWkMsTUFBQUEsWUFBWSxFQUFFLElBUEY7QUFRWkMsTUFBQUEsS0FBSyxFQUFFLEtBUks7QUFTWkMsTUFBQUEsYUFBYSxFQUFFLEVBVEg7QUFVWkMsTUFBQUEsU0FBUyxFQUFFLENBQUMsR0FBRCxFQUFNLEVBQU4sQ0FWQztBQVdaQyxNQUFBQSxVQUFVLEVBQUUsR0FYQTtBQVlaQyxNQUFBQSxXQUFXLEVBQUUsT0FaRDtBQWFaQyxNQUFBQSxLQUFLLEVBQUUsS0FiSztBQWNaQyxNQUFBQSxVQUFVLEVBQUU7QUFkQSxLQUFkO0FBZ0JBQyxJQUFBQSxFQUFFLENBQUMsMEJBQUQsRUFBNkIsWUFBTTtBQUNuQyxVQUFNQyxJQUFJLEdBQUdDLDJCQUFTQyxNQUFULENBQWdCLDZCQUFDLGtCQUFEO0FBQVcsUUFBQSxLQUFLLEVBQUVsQjtBQUFsQixRQUFoQixFQUE2Q21CLE1BQTdDLEVBQWI7O0FBQ0FDLE1BQUFBLE1BQU0sQ0FBQ0osSUFBRCxDQUFOLENBQWFLLGVBQWI7QUFDRCxLQUhDLENBQUY7QUFJRCxHQXJCTyxDQUFSO0FBdUJBdEIsRUFBQUEsUUFBUSxDQUFDLDBCQUFELEVBQTZCLFlBQU07QUFDekMsUUFBTXVCLEtBQUssR0FBR3pCLFNBQVMsQ0FBQztBQUN0QjBCLE1BQUFBLGtCQUFrQixFQUFFO0FBQ2xCQyxRQUFBQSxLQUFLLEVBQUUsSUFEVztBQUVsQkMsUUFBQUEsUUFBUSxFQUFFLEtBRlE7QUFHbEJ6QixRQUFBQSxLQUFLLEVBQUU7QUFIVztBQURFLEtBQUQsQ0FBdkI7O0FBT0EsUUFBTWdCLElBQUksR0FBR0MsMkJBQ1ZDLE1BRFUsQ0FFVCw2QkFBQyxvQkFBRDtBQUFVLE1BQUEsS0FBSyxFQUFFSTtBQUFqQixPQUNFLDZCQUFDLHFCQUFELE9BREYsQ0FGUyxFQU1WSCxNQU5VLEVBQWI7O0FBT0FDLElBQUFBLE1BQU0sQ0FBQ0osSUFBRCxDQUFOLENBQWFVLHFCQUFiO0FBaUhELEdBaElPLENBQVI7QUFpSUQsQ0FoS08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgcmVuZGVyZXIgZnJvbSAncmVhY3QtdGVzdC1yZW5kZXJlcic7XG5pbXBvcnQgTW92aWVDYXJkIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL01vdmllQ2FyZCc7XG5pbXBvcnQgTW92aWVEZXRhaWxzIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL01vdmllRGV0YWlscyc7XG5pbXBvcnQgY29uZmlndXJlTW9ja1N0b3JlIGZyb20gJ3JlZHV4LW1vY2stc3RvcmUnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHRodW5rIGZyb20gJ3JlZHV4LXRodW5rJztcbmltcG9ydCBBcHAgZnJvbSAnLi4vQXBwJztcblxuY29uc3QgbW9ja1N0b3JlID0gY29uZmlndXJlTW9ja1N0b3JlKFt0aHVua10pO1xuXG5kZXNjcmliZSgnQ29tcG9uZW50IHRlc3RzJywgKCkgPT4ge1xuICAvLyBkZXNjcmliZSgnQXBwIFRlc3QnLCAoKSA9PiB7XG4gIC8vICAgaXQoJ3Nob3VsZCBtYXRjaCB0byBzbmFwU2hvdCcsICgpID0+IHtcbiAgLy8gICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoPEFwcCAvPikudG9KU09OKCk7XG4gIC8vICAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KCk7XG4gIC8vICAgfSk7XG4gIC8vIH0pO1xuXG4gIGRlc2NyaWJlKCdNb3ZpZSBDYXJkIFRlc3QnLCAoKSA9PiB7XG4gICAgY29uc3QgbW92aWUgPSB7XG4gICAgICBpZDogMTIxMixcbiAgICAgIG9yaWdpbmFsX2xhbmd1YWdlOiAnZW4nLFxuICAgICAgb3JpZ2luYWxfdGl0bGU6ICdkdW1teScsXG4gICAgICBvdmVydmlldzogMTIxLFxuICAgICAgcmVsZWFzZV9kYXRlOiAxMTIsXG4gICAgICB0aXRsZTogJ2R1bW15JyxcbiAgICAgIHZvdGVfYXZlcmFnZTogMTIxMixcbiAgICAgIGFkdWx0OiBmYWxzZSxcbiAgICAgIGJhY2tkcm9wX3BhdGg6ICcnLFxuICAgICAgZ2VucmVfaWRzOiBbMTIxLCAyMl0sXG4gICAgICBwb3B1bGFyaXR5OiA0LjMsXG4gICAgICBwb3N0ZXJfcGF0aDogJ2ZqZmpkJyxcbiAgICAgIHZpZGVvOiBmYWxzZSxcbiAgICAgIHZvdGVfY291bnQ6IDEyMSxcbiAgICB9O1xuICAgIGl0KCdzaG91bGQgbWF0Y2ggdG8gc25hcFNob3QnLCAoKSA9PiB7XG4gICAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKDxNb3ZpZUNhcmQgbW92aWU9e21vdmllfSAvPikudG9KU09OKCk7XG4gICAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdzaG91bGQgbWF0Y2ggdG8gc25hcHNob3QnLCAoKSA9PiB7XG4gICAgY29uc3Qgc3RvcmUgPSBtb2NrU3RvcmUoe1xuICAgICAgbW92aWVEZXRhaWxSZWR1Y2VyOiB7XG4gICAgICAgIGVycm9yOiBudWxsLFxuICAgICAgICBsb2FkaWluZzogZmFsc2UsXG4gICAgICAgIG1vdmllOiB7fSxcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyXG4gICAgICAuY3JlYXRlKFxuICAgICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgICAgICA8TW92aWVEZXRhaWxzIC8+XG4gICAgICAgIDwvUHJvdmlkZXI+LFxuICAgICAgKVxuICAgICAgLnRvSlNPTigpO1xuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoSW5saW5lU25hcHNob3QoYFxuICAgICAgPFZpZXdcbiAgICAgICAgc3R5bGU9e1xuICAgICAgICAgIE9iamVjdCB7XG4gICAgICAgICAgICBcImJhY2tncm91bmRDb2xvclwiOiBcIiNmZmZmZmZcIixcbiAgICAgICAgICAgIFwiZmxleFwiOiAxLFxuICAgICAgICAgICAgXCJwYWRkaW5nXCI6IDEwLFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgPlxuICAgICAgICA8Vmlld1xuICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgIE9iamVjdCB7XG4gICAgICAgICAgICAgIFwiZmxleFwiOiAxLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgPlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgc291cmNlPXtcbiAgICAgICAgICAgICAgT2JqZWN0IHtcbiAgICAgICAgICAgICAgICBcInVyaVwiOiBcImh0dHA6Ly9pbWFnZS50bWRiLm9yZy90L3Avb3JpZ2luYWx1bmRlZmluZWRcIixcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3R5bGU9e1xuICAgICAgICAgICAgICBPYmplY3Qge1xuICAgICAgICAgICAgICAgIFwiZmxleFwiOiAxLFxuICAgICAgICAgICAgICAgIFwiaGVpZ2h0XCI6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBcInJlc2l6ZU1vZGVcIjogXCJjb3ZlclwiLFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWV3PlxuICAgICAgICA8UkNUU2Nyb2xsVmlld1xuICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgIE9iamVjdCB7XG4gICAgICAgICAgICAgIFwiZmxleFwiOiAxLFxuICAgICAgICAgICAgICBcInBhZGRpbmdUb3BcIjogMTAsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICA+XG4gICAgICAgICAgPFZpZXc+XG4gICAgICAgICAgICA8Vmlld1xuICAgICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgT2JqZWN0IHtcbiAgICAgICAgICAgICAgICAgIFwiYWxpZ25JdGVtc1wiOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgXCJmbGV4RGlyZWN0aW9uXCI6IFwicm93XCIsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgc3R5bGU9e1xuICAgICAgICAgICAgICAgICAgT2JqZWN0IHtcbiAgICAgICAgICAgICAgICAgICAgXCJjb2xvclwiOiBcIiM0YTRhNGFcIixcbiAgICAgICAgICAgICAgICAgICAgXCJmb250U2l6ZVwiOiAxOCxcbiAgICAgICAgICAgICAgICAgICAgXCJmb250V2VpZ2h0XCI6IFwiNTAwXCIsXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgICAgICAgIE9iamVjdCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY29sb3JcIjogXCIjOWI5YjliXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9udFNpemVcIjogMTYsXG4gICAgICAgICAgICAgICAgICAgIFwicGFkZGluZ0xlZnRcIjogNSxcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAoXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgICA8Vmlld1xuICAgICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgT2JqZWN0IHtcbiAgICAgICAgICAgICAgICAgIFwicGFkZGluZ1RvcFwiOiAxNSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgICBPYmplY3Qge1xuICAgICAgICAgICAgICAgICAgICBcImNvbG9yXCI6IFwiIzRhNGE0YVwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvbnRTaXplXCI6IDE2LFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICB8IFxuICAgICAgICAgICAgICAgIE5hTjpOYU5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgICAgICAgIE9iamVjdCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY29sb3JcIjogXCIjNGE0YTRhXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9udFNpemVcIjogMTYsXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgQ2FzdCA6IEFjdG9yIDEgfCBBY3RvciAyXG4gICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICBzdHlsZT17XG4gICAgICAgICAgICAgICAgICBPYmplY3Qge1xuICAgICAgICAgICAgICAgICAgICBcImNvbG9yXCI6IFwiIzRhNGE0YVwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvbnRTaXplXCI6IDE2LFxuICAgICAgICAgICAgICAgICAgICBcInBhZGRpbmdUb3BcIjogMTYsXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgPC9SQ1RTY3JvbGxWaWV3PlxuICAgICAgPC9WaWV3PlxuICAgIGApO1xuICB9KTtcbn0pO1xuIl19