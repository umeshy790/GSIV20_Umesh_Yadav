{"version":3,"sources":["UpcomingMovies.tsx"],"names":["selectState","state","movieListReducer","UpcomingMovies","loading","error","movies","dispatch","navigation","handlePress","movie","id","navigate","styles","container","item","StyleSheet","create","flex","backgroundColor"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAGA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAsBA,KAAK,CAACC,gBAA5B;AAAA,CAApB;;AAEA,IAAMC,cAAwB,GAAG,SAA3BA,cAA2B,GAAM;AAAA,qBACJ,6BAAYH,WAAZ,CADI;AAAA,MAC9BI,OAD8B,gBAC9BA,OAD8B;AAAA,MACrBC,KADqB,gBACrBA,KADqB;AAAA,MACdC,MADc,gBACdA,MADc;;AAErC,MAAMC,QAAQ,GAAG,8BAAjB;AAEA,MAAMC,UAAU,GAAG,4BAAnB;AAEA,wBAAU,YAAM;AACdD,IAAAA,QAAQ,CAAC,kCAAD,CAAR;AACD,GAFD,EAEG,CAACA,QAAD,CAFH;;AAIA,MAAME,YAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAkB;AACpCH,IAAAA,QAAQ,CAAC,+BAAkBG,KAAK,CAACC,EAAxB,CAAD,CAAR;AACAH,IAAAA,UAAU,CAACI,QAAX,CAAoB,cAApB;AACD,GAHD;;AAKA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,6BAAC,qBAAD;AACE,IAAA,IAAI,EAAER,MADR;AAEE,IAAA,UAAU,EAAE,CAFd;AAGE,IAAA,UAAU,EAAE;AAAA,UAAES,IAAF,QAAEA,IAAF;AAAA,aACV,6BAAC,kBAAD;AAAW,QAAA,KAAK,EAAEA,IAAlB;AAAwB,QAAA,WAAW,EAAE;AAAA,iBAAMN,YAAW,CAACM,IAAD,CAAjB;AAAA;AAArC,QADU;AAAA,KAHd;AAME,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAiBA,IAAI,CAACJ,EAAtB;AAAA;AANhB,IADF,CADF;AAYD,CA3BD;;eA6BeR,c;;;AAEf,IAAMU,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {StyleSheet, Text, View, ScrollView, FlatList} from 'react-native';\nimport {RootState} from '../store';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchUpcomingMovies, fetchMovieDetails} from '../action';\nimport {Movie} from '../modal/modals';\nimport MovieCard from './MovieCard';\nimport {useNavigation} from '@react-navigation/native';\nimport {getMovieDetails} from '../service/service';\n\nconst selectState = (state: RootState) => state.movieListReducer;\n\nconst UpcomingMovies: React.FC = () => {\n  const {loading, error, movies} = useSelector(selectState);\n  const dispatch = useDispatch();\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    dispatch(fetchUpcomingMovies());\n  }, [dispatch]);\n\n  const handlePress = (movie: Movie) => {\n    dispatch(fetchMovieDetails(movie.id));\n    navigation.navigate('MovieDetails');\n  };\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={movies}\n        numColumns={2}\n        renderItem={({item}) => (\n          <MovieCard movie={item} handlePress={() => handlePress(item)} />\n        )}\n        keyExtractor={(item: Movie) => item.id}\n      />\n    </View>\n  );\n};\n\nexport default UpcomingMovies;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n  },\n});\n"]}