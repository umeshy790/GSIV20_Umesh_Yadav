{"version":3,"sources":["MaskedView.js"],"names":["RNCMaskedView","MaskedView","_hasWarnedInvalidRenderMask","props","maskElement","children","otherViewProps","React","isValidElement","console","warn","StyleSheet","absoluteFill","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAUA;;AACA;;;;;;AAEA,IAAMA,aAAa,GAAG,yCAA4B,eAA5B,CAAtB;;IAyCqBC,U;;;;;;;;;;;;;;;UACnBC,2B,GAA8B,K;;;;;;6BAErB;AAAA,wBAC8C,KAAKC,KADnD;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UAC2BC,cAD3B;;AAGP,UAAI,CAACC,eAAMC,cAAN,CAAqBJ,WAArB,CAAL,EAAwC;AACtC,YAAI,CAAC,KAAKF,2BAAV,EAAuC;AACrCO,UAAAA,OAAO,CAACC,IAAR,CACE,sEACE,gDAFJ;AAIA,eAAKR,2BAAL,GAAmC,IAAnC;AACD;;AAED,eAAO,6BAAC,iBAAD,EAAUI,cAAV,EAA2BD,QAA3B,CAAP;AACD;;AAED,aACE,6BAAC,aAAD,EAAmBC,cAAnB,EACE,6BAAC,iBAAD;AAAM,QAAA,aAAa,EAAC,MAApB;AAA2B,QAAA,KAAK,EAAEK,wBAAWC;AAA7C,SACGR,WADH,CADF,EAIGC,QAJH,CADF;AAQD;;;EA1BqCE,eAAMM,S","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport React from 'react';\nimport { View, StyleSheet, requireNativeComponent } from 'react-native';\n\nconst RNCMaskedView = requireNativeComponent<any>('RNCMaskedView');\n\nimport { type MaskedViewProps } from './MaskedViewTypes';\n\n/**\n * Renders the child view with a mask specified in the `maskElement` prop.\n *\n * ```\n * import React from 'react';\n * import { Text, View } from 'react-native';\n * import MaskedView from 'react-native-masked-view';\n *\n * class MyMaskedView extends React.Component {\n *   render() {\n *     return (\n *       <MaskedView\n *         style={{ flex: 1 }}\n *         maskElement={\n *           <View style={styles.maskContainerStyle}>\n *             <Text style={styles.maskTextStyle}>\n *               Basic Mask\n *             </Text>\n *           </View>\n *         }\n *       >\n *         <View style={{ flex: 1, backgroundColor: 'blue' }} />\n *       </MaskedView>\n *     );\n *   }\n * }\n * ```\n *\n * The above example will render a view with a blue background that fills its\n * parent, and then mask that view with text that says \"Basic Mask\".\n *\n * The alpha channel of the view rendered by the `maskElement` prop determines how\n * much of the view's content and background shows through. Fully or partially\n * opaque pixels allow the underlying content to show through but fully\n * transparent pixels block that content.\n *\n */\nexport default class MaskedView extends React.Component<MaskedViewProps> {\n  _hasWarnedInvalidRenderMask = false;\n\n  render() {\n    const { maskElement, children, ...otherViewProps } = this.props;\n\n    if (!React.isValidElement(maskElement)) {\n      if (!this._hasWarnedInvalidRenderMask) {\n        console.warn(\n          'MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' +\n            'Expected a React Element. No mask will render.',\n        );\n        this._hasWarnedInvalidRenderMask = true;\n      }\n      // $FlowFixMe\n      return <View {...otherViewProps}>{children}</View>;\n    }\n\n    return (\n      <RNCMaskedView {...otherViewProps}>\n        <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n          {maskElement}\n        </View>\n        {children}\n      </RNCMaskedView>\n    );\n  }\n}\n"]}