{"version":3,"sources":["screens.native.js"],"names":["ENABLE_SCREENS","getViewManagerConfigCompat","name","UIManager","getViewManagerConfig","enableScreens","shouldEnableScreens","console","error","useScreens","shouldUseScreens","warn","screensEnabled","NativeScreenValue","NativeScreenContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","ScreensNativeModules","NativeScreen","NativeScreenContainer","Screen","setRef","ref","_ref","props","onComponentRef","setNativeProps","active","Animated","createAnimatedComponent","version","minor","style","children","rest","StyleSheet","absoluteFill","React","Component","ScreenContainer","styles","create","headerSubview","position","top","right","flexDirection","alignItems","justifyContent","ScreenStackHeaderBackButtonImage","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","module","exports","ScreenStack","ScreenStackHeaderConfig","ScreenStackHeaderSubview"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  requireNativeComponent,\n  View,\n  UIManager,\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport { version } from 'react-native/Libraries/Core/ReactNativeVersion';\n\nlet ENABLE_SCREENS = false;\n\n// UIManager[`${moduleName}`] is deprecated in RN 0.58 and `getViewManagerConfig` is added.\n// We can remove this when we drop support for RN < 0.58.\nconst getViewManagerConfigCompat = name =>\n  typeof UIManager.getViewManagerConfig !== 'undefined'\n    ? UIManager.getViewManagerConfig(name)\n    : UIManager[name];\n\nfunction enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n  if (ENABLE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\n// we should remove this at some point\nfunction useScreens(shouldUseScreens = true) {\n  console.warn('Method `useScreens` is deprecated, please use `enableScreens`');\n  enableScreens(shouldUseScreens);\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue;\nlet NativeScreenContainerValue;\nlet NativeScreenStack;\nlet NativeScreenStackHeaderConfig;\nlet NativeScreenStackHeaderSubview;\nlet AnimatedNativeScreen;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen', null);\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer', null);\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack', null);\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig', null);\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview', null);\n    return NativeScreenStackHeaderSubview;\n  },\n};\n\nclass Screen extends React.Component {\n  setNativeProps(props) {\n    this._ref.setNativeProps(props);\n  }\n  setRef = ref => {\n    this._ref = ref;\n    this.props.onComponentRef && this.props.onComponentRef(ref);\n  };\n  render() {\n    if (!ENABLE_SCREENS) {\n      // Filter out active prop in this case because it is unused and\n      // can cause problems depending on react-native version:\n      // https://github.com/react-navigation/react-navigation/issues/4886\n\n      /* eslint-disable no-unused-vars */\n      const { active, onComponentRef, ...props } = this.props;\n\n      return <Animated.View {...props} ref={this.setRef} />;\n    } else {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      // When using RN from master version is 0.0.0\n      if (version.minor >= 57 || version.minor === 0) {\n        return <AnimatedNativeScreen {...this.props} ref={this.setRef} />;\n      } else {\n        // On RN version below 0.57 we need to wrap screen's children with an\n        // additional View because of a bug fixed in react-native/pull/20658 which\n        // was preventing a view from having both styles and some other props being\n        // \"animated\" (using Animated native driver)\n        const { style, children, ...rest } = this.props;\n        return (\n          <AnimatedNativeScreen\n            {...rest}\n            ref={this.setRef}\n            style={StyleSheet.absoluteFill}>\n            <Animated.View style={style}>{children}</Animated.View>\n          </AnimatedNativeScreen>\n        );\n      }\n    }\n  }\n}\n\nclass ScreenContainer extends React.Component {\n  render() {\n    if (!ENABLE_SCREENS) {\n      return <View {...this.props} />;\n    } else {\n      return <ScreensNativeModules.NativeScreenContainer {...this.props} />;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = props => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = props => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = props => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = props => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nmodule.exports = {\n  ScreenContainer,\n  Screen,\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get ScreenStack() {\n    return ScreensNativeModules.NativeScreenStack;\n  },\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n\n  enableScreens,\n  useScreens,\n  screensEnabled,\n};\n"]}