2257cdec167e934bc3e04e1ffba31e0d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _fetchMock = _interopRequireDefault(require("fetch-mock"));

var _types = require("../src/types/types");

var _action = require("../src/action");

var middlewares = [_reduxThunk.default];
var mockStore = (0, _reduxMockStore.default)(middlewares);
describe('async actions', function () {
  describe('request upcoming movies thunk test', function () {
    afterEach(function () {
      _fetchMock.default.restore();
    });
    it('requesting movies', function () {
      _fetchMock.default.getOnce('https://api.themoviedb.org/3/movie/upcoming?api_key=b3a72b722e11795c7179cc928980a9e2', {
        body: {
          results: []
        },
        headers: {
          'content-type': 'application/json'
        }
      });

      var expectedActions = [{
        type: _types.REQUEST_UPCOMING_MOVIES_ACTION
      }, {
        type: _types.REQUEST_UPCOMING_MOVIES_SUCCESS_ACTION,
        data: []
      }];
      var store = mockStore({});
      return store.dispatch((0, _action.fetchUpcomingMovies)()).then(function () {
        return expect(store.getActions()).toEqual(expectedActions);
      });
    });
  });
  describe('request detail of movie thunk test', function () {
    var id = '12121';
    afterEach(function () {
      mockStore.restore();
    });
    it('request movie detail', function () {
      _fetchMock.default.getOnce('', {
        body: {}
      });

      var expectedActions = [{
        type: _types.REQUEST_MOVIE_DETAILS_ACTION,
        id: id
      }, {
        type: _types.REQUEST_MOVIE_DETAILS_SUCCESS_ACTION,
        data: {}
      }];
      var store = mockStore({});
      return store.dispatch((0, _action.fetchMovieDetails)(id)).then(function () {
        return expect(store.getActions()).toEqual(expectedActions);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jLWFjdGlvbnMtdGVzdC50cyJdLCJuYW1lcyI6WyJtaWRkbGV3YXJlcyIsInRodW5rIiwibW9ja1N0b3JlIiwiZGVzY3JpYmUiLCJhZnRlckVhY2giLCJmZXRjaE1vY2siLCJyZXN0b3JlIiwiaXQiLCJnZXRPbmNlIiwiYm9keSIsInJlc3VsdHMiLCJoZWFkZXJzIiwiZXhwZWN0ZWRBY3Rpb25zIiwidHlwZSIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX0FDVElPTiIsIlJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OIiwiZGF0YSIsInN0b3JlIiwiZGlzcGF0Y2giLCJ0aGVuIiwiZXhwZWN0IiwiZ2V0QWN0aW9ucyIsInRvRXF1YWwiLCJpZCIsIlJFUVVFU1RfTU9WSUVfREVUQUlMU19BQ1RJT04iLCJSRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT04iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBTUE7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLENBQUNDLG1CQUFELENBQXBCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLDZCQUFtQkYsV0FBbkIsQ0FBbEI7QUFFQUcsUUFBUSxDQUFDLGVBQUQsRUFBa0IsWUFBTTtBQUM5QkEsRUFBQUEsUUFBUSxDQUFDLG9DQUFELEVBQXVDLFlBQU07QUFDbkRDLElBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2RDLHlCQUFVQyxPQUFWO0FBQ0QsS0FGUSxDQUFUO0FBSUFDLElBQUFBLEVBQUUsQ0FBQyxtQkFBRCxFQUFzQixZQUFNO0FBQzVCRix5QkFBVUcsT0FBVixDQUNFLHNGQURGLEVBRUU7QUFDRUMsUUFBQUEsSUFBSSxFQUFFO0FBQUNDLFVBQUFBLE9BQU8sRUFBRTtBQUFWLFNBRFI7QUFFRUMsUUFBQUEsT0FBTyxFQUFFO0FBQUMsMEJBQWdCO0FBQWpCO0FBRlgsT0FGRjs7QUFRQSxVQUFNQyxlQUFlLEdBQUcsQ0FDdEI7QUFBQ0MsUUFBQUEsSUFBSSxFQUFFQztBQUFQLE9BRHNCLEVBRXRCO0FBQUNELFFBQUFBLElBQUksRUFBRUUsNkNBQVA7QUFBK0NDLFFBQUFBLElBQUksRUFBRTtBQUFyRCxPQUZzQixDQUF4QjtBQUtBLFVBQU1DLEtBQUssR0FBR2YsU0FBUyxDQUFDLEVBQUQsQ0FBdkI7QUFFQSxhQUFPZSxLQUFLLENBQ1RDLFFBREksQ0FDSyxrQ0FETCxFQUVKQyxJQUZJLENBRUM7QUFBQSxlQUFNQyxNQUFNLENBQUNILEtBQUssQ0FBQ0ksVUFBTixFQUFELENBQU4sQ0FBMkJDLE9BQTNCLENBQW1DVixlQUFuQyxDQUFOO0FBQUEsT0FGRCxDQUFQO0FBR0QsS0FuQkMsQ0FBRjtBQW9CRCxHQXpCTyxDQUFSO0FBMkJBVCxFQUFBQSxRQUFRLENBQUMsb0NBQUQsRUFBdUMsWUFBTTtBQUNuRCxRQUFNb0IsRUFBVSxHQUFHLE9BQW5CO0FBQ0FuQixJQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkRixNQUFBQSxTQUFTLENBQUNJLE9BQVY7QUFDRCxLQUZRLENBQVQ7QUFJQUMsSUFBQUEsRUFBRSxDQUFDLHNCQUFELEVBQXlCLFlBQU07QUFDL0JGLHlCQUFVRyxPQUFWLENBQWtCLEVBQWxCLEVBQXNCO0FBQ3BCQyxRQUFBQSxJQUFJLEVBQUU7QUFEYyxPQUF0Qjs7QUFJQSxVQUFNRyxlQUFlLEdBQUcsQ0FDdEI7QUFBQ0MsUUFBQUEsSUFBSSxFQUFFVyxtQ0FBUDtBQUFxQ0QsUUFBQUEsRUFBRSxFQUFFQTtBQUF6QyxPQURzQixFQUV0QjtBQUFDVixRQUFBQSxJQUFJLEVBQUVZLDJDQUFQO0FBQTZDVCxRQUFBQSxJQUFJLEVBQUU7QUFBbkQsT0FGc0IsQ0FBeEI7QUFLQSxVQUFNQyxLQUFLLEdBQUdmLFNBQVMsQ0FBQyxFQUFELENBQXZCO0FBRUEsYUFBT2UsS0FBSyxDQUNUQyxRQURJLENBQ0ssK0JBQWtCSyxFQUFsQixDQURMLEVBRUpKLElBRkksQ0FFQztBQUFBLGVBQU1DLE1BQU0sQ0FBQ0gsS0FBSyxDQUFDSSxVQUFOLEVBQUQsQ0FBTixDQUEyQkMsT0FBM0IsQ0FBbUNWLGVBQW5DLENBQU47QUFBQSxPQUZELENBQVA7QUFHRCxLQWZDLENBQUY7QUFnQkQsR0F0Qk8sQ0FBUjtBQXVCRCxDQW5ETyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZ3VyZU1vY2tTdG9yZSBmcm9tICdyZWR1eC1tb2NrLXN0b3JlJztcbmltcG9ydCB0aHVuayBmcm9tICdyZWR1eC10aHVuayc7XG5pbXBvcnQgZmV0Y2hNb2NrIGZyb20gJ2ZldGNoLW1vY2snO1xuaW1wb3J0IHtcbiAgUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfQUNUSU9OLFxuICBSRVFVRVNUX1VQQ09NSU5HX01PVklFU19TVUNDRVNTX0FDVElPTixcbiAgUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX0FDVElPTixcbiAgUkVRVUVTVF9NT1ZJRV9ERVRBSUxTX1NVQ0NFU1NfQUNUSU9OLFxufSBmcm9tICcuLi9zcmMvdHlwZXMvdHlwZXMnO1xuaW1wb3J0IHtmZXRjaFVwY29taW5nTW92aWVzLCBmZXRjaE1vdmllRGV0YWlsc30gZnJvbSAnLi4vc3JjL2FjdGlvbic7XG5cbmNvbnN0IG1pZGRsZXdhcmVzID0gW3RodW5rXTtcbmNvbnN0IG1vY2tTdG9yZSA9IGNvbmZpZ3VyZU1vY2tTdG9yZShtaWRkbGV3YXJlcyk7XG5cbmRlc2NyaWJlKCdhc3luYyBhY3Rpb25zJywgKCkgPT4ge1xuICBkZXNjcmliZSgncmVxdWVzdCB1cGNvbWluZyBtb3ZpZXMgdGh1bmsgdGVzdCcsICgpID0+IHtcbiAgICBhZnRlckVhY2goKCkgPT4ge1xuICAgICAgZmV0Y2hNb2NrLnJlc3RvcmUoKTtcbiAgICB9KTtcblxuICAgIGl0KCdyZXF1ZXN0aW5nIG1vdmllcycsICgpID0+IHtcbiAgICAgIGZldGNoTW9jay5nZXRPbmNlKFxuICAgICAgICAnaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9tb3ZpZS91cGNvbWluZz9hcGlfa2V5PWIzYTcyYjcyMmUxMTc5NWM3MTc5Y2M5Mjg5ODBhOWUyJyxcbiAgICAgICAge1xuICAgICAgICAgIGJvZHk6IHtyZXN1bHRzOiBbXX0sXG4gICAgICAgICAgaGVhZGVyczogeydjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9LFxuICAgICAgICB9LFxuICAgICAgKTtcblxuICAgICAgY29uc3QgZXhwZWN0ZWRBY3Rpb25zID0gW1xuICAgICAgICB7dHlwZTogUkVRVUVTVF9VUENPTUlOR19NT1ZJRVNfQUNUSU9OfSxcbiAgICAgICAge3R5cGU6IFJFUVVFU1RfVVBDT01JTkdfTU9WSUVTX1NVQ0NFU1NfQUNUSU9OLCBkYXRhOiBbXX0sXG4gICAgICBdO1xuXG4gICAgICBjb25zdCBzdG9yZSA9IG1vY2tTdG9yZSh7fSk7XG5cbiAgICAgIHJldHVybiBzdG9yZVxuICAgICAgICAuZGlzcGF0Y2goZmV0Y2hVcGNvbWluZ01vdmllcygpKVxuICAgICAgICAudGhlbigoKSA9PiBleHBlY3Qoc3RvcmUuZ2V0QWN0aW9ucygpKS50b0VxdWFsKGV4cGVjdGVkQWN0aW9ucykpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncmVxdWVzdCBkZXRhaWwgb2YgbW92aWUgdGh1bmsgdGVzdCcsICgpID0+IHtcbiAgICBjb25zdCBpZDogbnVtYmVyID0gJzEyMTIxJztcbiAgICBhZnRlckVhY2goKCkgPT4ge1xuICAgICAgbW9ja1N0b3JlLnJlc3RvcmUoKTtcbiAgICB9KTtcblxuICAgIGl0KCdyZXF1ZXN0IG1vdmllIGRldGFpbCcsICgpID0+IHtcbiAgICAgIGZldGNoTW9jay5nZXRPbmNlKCcnLCB7XG4gICAgICAgIGJvZHk6IHt9LFxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGV4cGVjdGVkQWN0aW9ucyA9IFtcbiAgICAgICAge3R5cGU6IFJFUVVFU1RfTU9WSUVfREVUQUlMU19BQ1RJT04sIGlkOiBpZH0sXG4gICAgICAgIHt0eXBlOiBSRVFVRVNUX01PVklFX0RFVEFJTFNfU1VDQ0VTU19BQ1RJT04sIGRhdGE6IHt9fSxcbiAgICAgIF07XG5cbiAgICAgIGNvbnN0IHN0b3JlID0gbW9ja1N0b3JlKHt9KTtcblxuICAgICAgcmV0dXJuIHN0b3JlXG4gICAgICAgIC5kaXNwYXRjaChmZXRjaE1vdmllRGV0YWlscyhpZCkpXG4gICAgICAgIC50aGVuKCgpID0+IGV4cGVjdChzdG9yZS5nZXRBY3Rpb25zKCkpLnRvRXF1YWwoZXhwZWN0ZWRBY3Rpb25zKSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=