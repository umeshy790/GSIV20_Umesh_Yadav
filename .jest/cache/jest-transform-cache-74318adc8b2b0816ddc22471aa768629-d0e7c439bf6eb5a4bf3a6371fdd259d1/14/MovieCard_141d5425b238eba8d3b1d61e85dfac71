04efbbbddb8278a31a56aebc7a84c5db
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var MovieCard = function MovieCard(props) {
  var movie = props.movie,
      handlePress = props.handlePress;

  var _handlePress = function _handlePress() {
    return handlePress(movie);
  };

  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    style: {
      flex: 1
    },
    onPress: _handlePress
  }, _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.View, {
    style: styles.body
  }, _react.default.createElement(_reactNative.Image, {
    style: styles.image,
    source: {
      uri: "http://image.tmdb.org/t/p/original" + (movie == null ? void 0 : movie.poster_path)
    }
  }), _react.default.createElement(_reactNative.View, {
    style: {
      flexDirection: 'row',
      paddingTop: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 1,
    style: styles.title
  }, movie.title), _react.default.createElement(_reactNative.Text, {
    style: styles.popularity
  }, "(", movie.vote_average, ")")), _react.default.createElement(_reactNative.View, {
    style: {
      paddingVertical: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 2,
    style: styles.description
  }, movie.overview)))));
};

var _default = MovieCard;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    borderWidth: 12,
    borderColor: "transparent"
  },
  body: {
    flex: 1,
    maxWidth: 180,
    height: 290,
    borderRadius: 20,
    backgroundColor: "#dfdfdf",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 3
    },
    shadowOpacity: 0.23,
    shadowRadius: 3.42,
    elevation: 6
  },
  image: {
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    height: 200,
    width: undefined
  },
  title: {
    fontSize: 16,
    color: '#4285f4',
    fontWeight: '500',
    flex: 1
  },
  popularity: {
    fontSize: 15,
    color: "#4a4a4a",
    fontWeight: "500"
  },
  description: {
    fontSize: 14,
    color: "#4a4a4a"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vdmllQ2FyZC50c3giXSwibmFtZXMiOlsiTW92aWVDYXJkIiwicHJvcHMiLCJtb3ZpZSIsImhhbmRsZVByZXNzIiwiX2hhbmRsZVByZXNzIiwiZmxleCIsInN0eWxlcyIsImNvbnRhaW5lciIsImJvZHkiLCJpbWFnZSIsInVyaSIsInBvc3Rlcl9wYXRoIiwiZmxleERpcmVjdGlvbiIsInBhZGRpbmdUb3AiLCJwYWRkaW5nSG9yaXpvbnRhbCIsInRpdGxlIiwicG9wdWxhcml0eSIsInZvdGVfYXZlcmFnZSIsInBhZGRpbmdWZXJ0aWNhbCIsImRlc2NyaXB0aW9uIiwib3ZlcnZpZXciLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsIm1heFdpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiYmFja2dyb3VuZENvbG9yIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJlbGV2YXRpb24iLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJ1bmRlZmluZWQiLCJmb250U2l6ZSIsImNvbG9yIiwiZm9udFdlaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQVFBLElBQU1BLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLEtBQUQsRUFBaUI7QUFBQSxNQUN6QkMsS0FEeUIsR0FDRkQsS0FERSxDQUN6QkMsS0FEeUI7QUFBQSxNQUNsQkMsV0FEa0IsR0FDRkYsS0FERSxDQUNsQkUsV0FEa0I7O0FBR2pDLE1BQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlO0FBQUEsV0FBTUQsV0FBVyxDQUFDRCxLQUFELENBQWpCO0FBQUEsR0FBckI7O0FBRUEsU0FDRSw2QkFBQyxxQ0FBRDtBQUEwQixJQUFBLEtBQUssRUFBRTtBQUFDRyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFqQztBQUE0QyxJQUFB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QUFBLFVBQVUsRUFBRztBQUhILEdBakNtQjtBQXNDL0JyQixFQUFBQSxXQUFXLEVBQUU7QUFDWG1CLElBQUFBLFFBQVEsRUFBRSxFQURDO0FBRVhDLElBQUFBLEtBQUssRUFBRztBQUZHO0FBdENrQixDQUFsQixDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7U3R5bGVTaGVldCwgVGV4dCwgVmlldywgSW1hZ2UsIFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFja30gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7TW92aWV9IGZyb20gJy4uL21vZGFsL21vZGFscyc7XG5cbmludGVyZmFjZSBQcm9wIHtcbiAgbW92aWU6IE1vdmllLFxuICBoYW5kbGVQcmVzcyA6IGFueVxufVxuXG5jb25zdCBNb3ZpZUNhcmQgPSAocHJvcHM6IFByb3ApID0+IHtcbiAgY29uc3QgeyBtb3ZpZSwgaGFuZGxlUHJlc3MgfSA9IHByb3BzO1xuXG4gIGNvbnN0IF9oYW5kbGVQcmVzcyA9ICgpID0+IGhhbmRsZVByZXNzKG1vdmllKVxuXG4gIHJldHVybiAoXG4gICAgPFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayBzdHlsZT17e2ZsZXg6IDF9fSBvblByZXNzPXtfaGFuZGxlUHJlc3N9PlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJvZHl9PlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgICAgICAgc291cmNlPXt7XG4gICAgICAgICAgICAgIHVyaTogYGh0dHA6Ly9pbWFnZS50bWRiLm9yZy90L3Avb3JpZ2luYWwke21vdmllPy5wb3N0ZXJfcGF0aH1gXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3tmbGV4RGlyZWN0aW9uIDogJ3JvdycsIHBhZGRpbmdUb3AgOiA1LCBwYWRkaW5nSG9yaXpvbnRhbCA6IDh9fT5cbiAgICAgICAgICAgIDxUZXh0IGVsbGlwc2l6ZU1vZGU9XCJ0YWlsXCIgbnVtYmVyT2ZMaW5lcz17MX0gc3R5bGU9e3N0eWxlcy50aXRsZX0+e21vdmllLnRpdGxlfTwvVGV4dD5cbiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMucG9wdWxhcml0eX0+KHttb3ZpZS52b3RlX2F2ZXJhZ2V9KTwvVGV4dD5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3twYWRkaW5nVmVydGljYWwgOiA1LCBwYWRkaW5nSG9yaXpvbnRhbCA6IDh9fT5cbiAgICAgICAgICAgICA8VGV4dCBlbGxpcHNpemVNb2RlPVwidGFpbFwiIG51bWJlck9mTGluZXM9ezJ9IHN0eWxlPXtzdHlsZXMuZGVzY3JpcHRpb259Pnttb3ZpZS5vdmVydmlld308L1RleHQ+XG4gICAgICAgICAgPC9WaWV3PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICA8L1ZpZXc+XG4gICAgPC9Ub3VjaGFibGVXaXRob3V0RmVlZGJhY2s+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNb3ZpZUNhcmQ7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgICBib3JkZXJXaWR0aDogMTIsXG4gICAgYm9yZGVyQ29sb3I6IFwidHJhbnNwYXJlbnRcIlxuICB9LFxuICBib2R5OiB7XG4gICAgZmxleDogMSxcbiAgICBtYXhXaWR0aDogMTgwLFxuICAgIGhlaWdodDogMjkwLFxuICAgIGJvcmRlclJhZGl1czogMjAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcIiNkZmRmZGZcIixcbiAgICBzaGFkb3dDb2xvcjogXCIjMDAwXCIsXG4gICAgc2hhZG93T2Zmc2V0OiB7XG4gICAgXHR3aWR0aDogMCxcbiAgICAgaGVpZ2h0OiAzLFxuICAgIH0sXG4gICAgc2hhZG93T3BhY2l0eTogMC4yMyxcbiAgICBzaGFkb3dSYWRpdXM6IDMuNDIsXG4gICAgZWxldmF0aW9uOiA2LFxuICAgfSxcbiAgaW1hZ2U6IHtcbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAyMCxcbiAgICBib3JkZXJUb3BSaWdodFJhZGl1cyA6IDIwLFxuICAgICAgaGVpZ2h0OiAyMDAsXG4gICAgICB3aWR0aCA6IHVuZGVmaW5lZFxuICB9LFxuICB0aXRsZToge1xuICAgIGZvbnRTaXplOiAxNixcbiAgICBjb2xvcjogJyM0Mjg1ZjQnLFxuICAgIGZvbnRXZWlnaHQ6ICc1MDAnLFxuICAgIGZsZXggOiAxLFxuICB9LFxuICBwb3B1bGFyaXR5OiB7XG4gICAgZm9udFNpemU6IDE1LFxuICAgIGNvbG9yOiBcIiM0YTRhNGFcIixcbiAgICBmb250V2VpZ2h0IDogXCI1MDBcIlxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvciA6IFwiIzRhNGE0YVwiXG4gIH1cbn0pO1xuIl19