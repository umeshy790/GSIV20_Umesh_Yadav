67ec29c56a887cd3c9a8a5a3588f0d1a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var MovieCard = function MovieCard(props) {
  var movie = props.movie,
      handlePress = props.handlePress;
  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
    style: {
      flex: 1
    },
    onPress: handlePress
  }, _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.View, {
    style: styles.body
  }, _react.default.createElement(_reactNative.Image, {
    style: styles.image,
    source: {
      uri: "http://image.tmdb.org/t/p/original" + (movie == null ? void 0 : movie.poster_path)
    }
  }), _react.default.createElement(_reactNative.View, {
    style: {
      flexDirection: 'row',
      paddingTop: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 1,
    style: styles.title
  }, movie.title), _react.default.createElement(_reactNative.Text, {
    style: styles.popularity
  }, "(", movie.vote_average, ")")), _react.default.createElement(_reactNative.View, {
    style: {
      paddingVertical: 5,
      paddingHorizontal: 8
    }
  }, _react.default.createElement(_reactNative.Text, {
    ellipsizeMode: "tail",
    numberOfLines: 2,
    style: styles.description
  }, movie.overview)))));
};

var _default = MovieCard;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    borderWidth: 12,
    borderColor: "transparent"
  },
  body: {
    flex: 1,
    height: 290,
    borderRadius: 20,
    backgroundColor: "#dfdfdf",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 3
    },
    shadowOpacity: 0.23,
    shadowRadius: 3.42,
    elevation: 6
  },
  image: {
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    height: 200,
    width: undefined
  },
  title: {
    fontSize: 16,
    color: '#4285f4',
    fontWeight: '500',
    flex: 1
  },
  popularity: {
    fontSize: 15,
    color: "#4a4a4a",
    fontWeight: "500"
  },
  description: {
    fontSize: 14,
    color: "#4a4a4a"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vdmllQ2FyZC50c3giXSwibmFtZXMiOlsiTW92aWVDYXJkIiwicHJvcHMiLCJtb3ZpZSIsImhhbmRsZVByZXNzIiwiZmxleCIsInN0eWxlcyIsImNvbnRhaW5lciIsImJvZHkiLCJpbWFnZSIsInVyaSIsInBvc3Rlcl9wYXRoIiwiZmxleERpcmVjdGlvbiIsInBhZGRpbmdUb3AiLCJwYWRkaW5nSG9yaXpvbnRhbCIsInRpdGxlIiwicG9wdWxhcml0eSIsInZvdGVfYXZlcmFnZSIsInBhZGRpbmdWZXJ0aWNhbCIsImRlc2NyaXB0aW9uIiwib3ZlcnZpZXciLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiZWxldmF0aW9uIiwiYm9yZGVyVG9wTGVmdFJhZGl1cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwidW5kZWZpbmVkIiwiZm9udFNpemUiLCJjb2xvciIsImZvbnRXZWlnaHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFRQSxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxLQUFELEVBQWlCO0FBQUEsTUFDekJDLEtBRHlCLEdBQ0ZELEtBREUsQ0FDekJDLEtBRHlCO0FBQUEsTUFDbEJDLFdBRGtCLEdBQ0ZGLEtBREUsQ0FDbEJFLFdBRGtCO0FBRWpDLFNBQ0UsNkJBQUMscUNBQUQ7QUFBMEIsSUFBQSxLQUFLLEVBQUU7QUFBQ0MsTUFBQUEsSUFBSSxFQUFFO0FBQVAsS0FBakM7QUFBNEMsSUFBQSxPQUFPLEVBQUVEO0FBQXJELEtBQ0UsNkJBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRUUsTUFBTSxDQUFDQztBQUFwQixLQUNFLDZCQUFDLGlCQUFEO0FBQU0sSUFBQSxLQUFL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ZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1N0eWxlU2hlZXQsIFRleHQsIFZpZXcsIEltYWdlLCBUb3VjaGFibGVXaXRob3V0RmVlZGJhY2t9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQge01vdmllfSBmcm9tICcuLi9tb2RhbC9tb2RhbHMnO1xuXG5pbnRlcmZhY2UgUHJvcCB7XG4gIG1vdmllOiBNb3ZpZSxcbiAgaGFuZGxlUHJlc3MgOiAoKSA9PiB7fVxufVxuXG5jb25zdCBNb3ZpZUNhcmQgPSAocHJvcHM6IFByb3ApID0+IHtcbiAgY29uc3QgeyBtb3ZpZSwgaGFuZGxlUHJlc3MgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxUb3VjaGFibGVXaXRob3V0RmVlZGJhY2sgc3R5bGU9e3tmbGV4OiAxfX0gb25QcmVzcz17aGFuZGxlUHJlc3N9PlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJvZHl9PlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgICAgICAgc291cmNlPXt7XG4gICAgICAgICAgICAgIHVyaTogYGh0dHA6Ly9pbWFnZS50bWRiLm9yZy90L3Avb3JpZ2luYWwke21vdmllPy5wb3N0ZXJfcGF0aH1gXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3tmbGV4RGlyZWN0aW9uIDogJ3JvdycsIHBhZGRpbmdUb3AgOiA1LCBwYWRkaW5nSG9yaXpvbnRhbCA6IDh9fT5cbiAgICAgICAgICAgIDxUZXh0IGVsbGlwc2l6ZU1vZGU9XCJ0YWlsXCIgbnVtYmVyT2ZMaW5lcz17MX0gc3R5bGU9e3N0eWxlcy50aXRsZX0+e21vdmllLnRpdGxlfTwvVGV4dD5cbiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMucG9wdWxhcml0eX0+KHttb3ZpZS52b3RlX2F2ZXJhZ2V9KTwvVGV4dD5cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3twYWRkaW5nVmVydGljYWwgOiA1LCBwYWRkaW5nSG9yaXpvbnRhbCA6IDh9fT5cbiAgICAgICAgICAgICA8VGV4dCBlbGxpcHNpemVNb2RlPVwidGFpbFwiIG51bWJlck9mTGluZXM9ezJ9IHN0eWxlPXtzdHlsZXMuZGVzY3JpcHRpb259Pnttb3ZpZS5vdmVydmlld308L1RleHQ+XG4gICAgICAgICAgPC9WaWV3PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICA8L1ZpZXc+XG4gICAgPC9Ub3VjaGFibGVXaXRob3V0RmVlZGJhY2s+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNb3ZpZUNhcmQ7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgICBib3JkZXJXaWR0aDogMTIsXG4gICAgYm9yZGVyQ29sb3I6IFwidHJhbnNwYXJlbnRcIlxuICB9LFxuICBib2R5OiB7XG4gICAgZmxleCA6IDEsXG4gICAgaGVpZ2h0OiAyOTAsXG4gICAgYm9yZGVyUmFkaXVzOiAyMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2RmZGZkZlwiLFxuICAgIHNoYWRvd0NvbG9yOiBcIiMwMDBcIixcbiAgICBzaGFkb3dPZmZzZXQ6IHtcbiAgICBcdHdpZHRoOiAwLFxuICAgICBoZWlnaHQ6IDMsXG4gICAgfSxcbiAgICBzaGFkb3dPcGFjaXR5OiAwLjIzLFxuICAgIHNoYWRvd1JhZGl1czogMy40MixcbiAgICBlbGV2YXRpb246IDYsXG4gICB9LFxuICBpbWFnZToge1xuICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IDIwLFxuICAgIGJvcmRlclRvcFJpZ2h0UmFkaXVzIDogMjAsXG4gICAgICBoZWlnaHQ6IDIwMCxcbiAgICAgIHdpZHRoIDogdW5kZWZpbmVkXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGNvbG9yOiAnIzQyODVmNCcsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgZmxleCA6IDEsXG4gIH0sXG4gIHBvcHVsYXJpdHk6IHtcbiAgICBmb250U2l6ZTogMTUsXG4gICAgY29sb3I6IFwiIzRhNGE0YVwiLFxuICAgIGZvbnRXZWlnaHQgOiBcIjUwMFwiXG4gIH0sXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZm9udFNpemU6IDE0LFxuICAgIGNvbG9yIDogXCIjNGE0YTRhXCJcbiAgfVxufSk7XG4iXX0=