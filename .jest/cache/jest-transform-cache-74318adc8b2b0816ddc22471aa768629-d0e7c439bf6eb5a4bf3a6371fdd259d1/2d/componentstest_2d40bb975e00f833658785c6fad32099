42ef1a2e6cf6ed84ce2221a95ab9a9f9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _MovieCard = _interopRequireDefault(require("../src/components/MovieCard"));

var _MovieDetails = _interopRequireDefault(require("../src/components/MovieDetails"));

var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));

var _reactRedux = require("react-redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _App = require("../App");

var mockStore = (0, _reduxMockStore.default)([_reduxThunk.default]);
describe('Component tests', function () {
  describe('Movie Card Test', function () {
    var movie = {
      id: 1212,
      original_language: 'en',
      original_title: 'dummy',
      overview: 121,
      release_date: 112,
      title: 'dummy',
      vote_average: 1212,
      adult: false,
      backdrop_path: '',
      genre_ids: [121, 22],
      popularity: 4.3,
      poster_path: 'fjfjd',
      video: false,
      vote_count: 121
    };
    it('should match to snapShot', function () {
      var tree = _reactTestRenderer.default.create(_react.default.createElement(_MovieCard.default, {
        movie: movie
      })).toJSON();

      expect(tree).toMatchSnapshot();
    });
  });
  describe('should match to snapshot', function () {
    var store = mockStore({
      movieDetailReducer: {
        error: null,
        loadiing: false,
        movie: {}
      }
    });

    var tree = _reactTestRenderer.default.create(_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, _react.default.createElement(_MovieDetails.default, null))).toJSON();

    expect(tree).toMatchInlineSnapshot("\n      <View\n        style={\n          Object {\n            \"backgroundColor\": \"#ffffff\",\n            \"flex\": 1,\n            \"padding\": 10,\n          }\n        }\n      >\n        <View\n          style={\n            Object {\n              \"flex\": 1,\n            }\n          }\n        >\n          <Image\n            source={\n              Object {\n                \"uri\": \"http://image.tmdb.org/t/p/originalundefined\",\n              }\n            }\n            style={\n              Object {\n                \"flex\": 1,\n                \"height\": undefined,\n                \"resizeMode\": \"cover\",\n              }\n            }\n          />\n        </View>\n        <RCTScrollView\n          style={\n            Object {\n              \"flex\": 1,\n              \"paddingTop\": 10,\n            }\n          }\n        >\n          <View>\n            <View\n              style={\n                Object {\n                  \"alignItems\": \"center\",\n                  \"flexDirection\": \"row\",\n                }\n              }\n            >\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 18,\n                    \"fontWeight\": \"500\",\n                  }\n                }\n              />\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#9b9b9b\",\n                    \"fontSize\": 16,\n                    \"paddingLeft\": 5,\n                  }\n                }\n              >\n                (\n                )\n              </Text>\n            </View>\n            <View\n              style={\n                Object {\n                  \"paddingTop\": 15,\n                }\n              }\n            >\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                  }\n                }\n              >\n                 | \n                NaN:NaN\n              </Text>\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                  }\n                }\n              >\n                Cast : Actor 1 | Actor 2\n              </Text>\n              <Text\n                style={\n                  Object {\n                    \"color\": \"#4a4a4a\",\n                    \"fontSize\": 16,\n                    \"paddingTop\": 16,\n                  }\n                }\n              />\n            </View>\n          </View>\n        </RCTScrollView>\n      </View>\n    ");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,