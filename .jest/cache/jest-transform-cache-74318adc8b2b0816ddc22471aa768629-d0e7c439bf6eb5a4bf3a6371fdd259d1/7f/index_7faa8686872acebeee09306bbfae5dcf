836e3012f9290de659795403ca225745
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SafeAreaProvider = SafeAreaProvider;
exports.useSafeArea = useSafeArea;
exports.SafeAreaView = SafeAreaView;
Object.defineProperty(exports, "initialWindowSafeAreaInsets", {
  enumerable: true,
  get: function get() {
    return _InitialWindowSafeAreaInsets.default;
  }
});
exports.SafeAreaConsumer = exports.SafeAreaContext = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _NativeSafeAreaView = _interopRequireDefault(require("./NativeSafeAreaView"));

var _InitialWindowSafeAreaInsets = _interopRequireDefault(require("./InitialWindowSafeAreaInsets"));

var _jsxFileName = "/Users/janic/Developer/react-native-safe-area-context/src/index.tsx";
var SafeAreaContext = React.createContext(null);
exports.SafeAreaContext = SafeAreaContext;

function SafeAreaProvider(_ref) {
  var children = _ref.children,
      initialSafeAreaInsets = _ref.initialSafeAreaInsets;
  var parentInsets = useParentSafeArea();

  var _React$useState = React.useState(initialSafeAreaInsets || parentInsets),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      insets = _React$useState2[0],
      setInsets = _React$useState2[1];

  var onInsetsChange = React.useCallback(function (event) {
    setInsets(event.nativeEvent.insets);
  }, []);
  return React.createElement(_NativeSafeAreaView.default, {
    style: styles.fill,
    onInsetsChange: onInsetsChange,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28
    }
  }, insets != null ? React.createElement(SafeAreaContext.Provider, {
    value: insets,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30
    }
  }, children) : null);
}

var styles = _reactNative.StyleSheet.create({
  fill: {
    flex: 1
  }
});

var SafeAreaConsumer = SafeAreaContext.Consumer;
exports.SafeAreaConsumer = SafeAreaConsumer;

function useParentSafeArea() {
  return React.useContext(SafeAreaContext);
}

function useSafeArea() {
  var safeArea = React.useContext(SafeAreaContext);

  if (safeArea == null) {
    throw new Error('No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');
  }

  return safeArea;
}

function SafeAreaView(_ref2) {
  var style = _ref2.style,
      rest = (0, _objectWithoutProperties2.default)(_ref2, ["style"]);
  var insets = useSafeArea();
  return React.createElement(_reactNative.View, (0, _extends2.default)({
    style: [{
      paddingTop: insets.top,
      paddingRight: insets.right,
      paddingBottom: insets.bottom,
      paddingLeft: insets.left
    }, style]
  }, rest, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65
    }
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzeCJdLCJuYW1lcyI6WyJTYWZlQXJlYUNvbnRleHQiLCJSZWFjdCIsImNoaWxkcmVuIiwiaW5pdGlhbFNhZmVBcmVhSW5zZXRzIiwicGFyZW50SW5zZXRzIiwidXNlUGFyZW50U2FmZUFyZWEiLCJpbnNldHMiLCJzZXRJbnNldHMiLCJvbkluc2V0c0NoYW5nZSIsImV2ZW50Iiwic3R5bGVzIiwiU3R5bGVTaGVldCIsImZpbGwiLCJmbGV4IiwiU2FmZUFyZWFDb25zdW1lciIsInNhZmVBcmVhIiwic3R5bGUiLCJyZXN0IiwidXNlU2FmZUFyZWEiLCJwYWRkaW5nVG9wIiwicGFkZGluZ1JpZ2h0IiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdMZWZ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUVBLElBQUEsbUJBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7O0FBRUEsSUFBQSw0QkFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLCtCQUFBLENBQUEsQ0FBQTs7O0FBRU8sSUFBTUEsZUFBZSxHQUFHQyxLQUFLLENBQUxBLGFBQUFBLENBQXhCLElBQXdCQSxDQUF4Qjs7O0FBT0EsU0FBQSxnQkFBQSxDQUFBLElBQUEsRUFHZTtBQUZwQkMsTUFBQUEsUUFFb0IsR0FBQSxJQUFBLENBRnBCQSxRQUFBQTtBQUFBQSxNQUNBQyxxQkFDb0IsR0FBQSxJQUFBLENBRHBCQSxxQkFEQUQ7QUFHQSxNQUFNRSxZQUFZLEdBQUdDLGlCQUFyQixFQUFBOztBQURvQixNQUFBLGVBQUEsR0FFUUosS0FBSyxDQUFMQSxRQUFBQSxDQUMxQkUscUJBQXFCLElBSEgsWUFFUUYsQ0FGUjtBQUFBLE1BQUEsZ0JBQUEsR0FBQSxDQUFBLEdBQUEsZUFBQSxDQUFBLE9BQUEsRUFBQSxlQUFBLEVBQUEsQ0FBQSxDQUFBO0FBQUEsTUFFYkssTUFGYSxHQUFBLGdCQUFBLENBQUEsQ0FBQSxDQUFBO0FBQUEsTUFFTEMsU0FGSyxHQUFBLGdCQUFBLENBQUEsQ0FBQSxDQUFBOztBQUtwQixNQUFNQyxjQUFjLEdBQUdQLEtBQUssQ0FBTEEsV0FBQUEsQ0FBa0IsVUFBQSxLQUFBLEVBQThCO0FBQ3JFTSxJQUFBQSxTQUFTLENBQUNFLEtBQUssQ0FBTEEsV0FBQUEsQ0FBVkYsTUFBUyxDQUFUQTtBQURxQk4sR0FBQUEsRUFBdkIsRUFBdUJBLENBQXZCO0FBSUEsU0FDRSxLQUFBLENBQUEsYUFBQSxDQUFDLG1CQUFBLENBQUQsT0FBQSxFQUFBO0FBQW9CLElBQUEsS0FBSyxFQUFFUyxNQUFNLENBQWpDLElBQUE7QUFBd0MsSUFBQSxjQUFjLEVBQXRELGNBQUE7QUFBQSxJQUFBLFFBQUEsRUFBQTtBQUFBLE1BQUEsUUFBQSxFQUFBLFlBQUE7QUFBQSxNQUFBLFVBQUEsRUFBQTtBQUFBO0FBQUEsR0FBQSxFQUNHSixNQUFNLElBQU5BLElBQUFBLEdBQ0MsS0FBQSxDQUFBLGFBQUEsQ0FBQyxlQUFELENBQUEsUUFBQSxFQUFBO0FBQTBCLElBQUEsS0FBSyxFQUEvQixNQUFBO0FBQUEsSUFBQSxRQUFBLEVBQUE7QUFBQSxNQUFBLFFBQUEsRUFBQSxZQUFBO0FBQUEsTUFBQSxVQUFBLEVBQUE7QUFBQTtBQUFBLEdBQUEsRUFEREEsUUFDQyxDQUREQSxHQUZMLElBQ0UsQ0FERjtBQVdGOztBQUFBLElBQU1JLE1BQU0sR0FBR0MsWUFBQUEsQ0FBQUEsVUFBQUEsQ0FBQUEsTUFBQUEsQ0FBa0I7QUFDL0JDLEVBQUFBLElBQUksRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBRGQ7QUFDUTtBQUR5QixDQUFsQkYsQ0FBZjs7QUFJTyxJQUFNRyxnQkFBZ0IsR0FBR2QsZUFBZSxDQUF4QyxRQUFBOzs7QUFFUCxTQUFBLGlCQUFBLEdBQXdFO0FBQ3RFLFNBQU9DLEtBQUssQ0FBTEEsVUFBQUEsQ0FBUCxlQUFPQSxDQUFQO0FBR0s7O0FBQUEsU0FBQSxXQUFBLEdBQW9DO0FBQ3pDLE1BQU1jLFFBQVEsR0FBR2QsS0FBSyxDQUFMQSxVQUFBQSxDQUFqQixlQUFpQkEsQ0FBakI7O0FBQ0EsTUFBSWMsUUFBUSxJQUFaLElBQUEsRUFBc0I7QUFDcEIsVUFBTSxJQUFBLEtBQUEsQ0FBTix3R0FBTSxDQUFOO0FBSUY7O0FBQUEsU0FBQSxRQUFBO0FBR0s7O0FBQUEsU0FBQSxZQUFBLENBQUEsS0FBQSxFQUd1QztBQUY1Q0MsTUFBQUEsS0FFNEMsR0FBQSxLQUFBLENBRjVDQSxLQUFBQTtBQUFBQSxNQUNHQyxJQUN5QyxHQUFBLENBQUEsR0FBQSx5QkFBQSxDQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxPQUFBLENBQUEsQ0FGNUNEO0FBR0EsTUFBTVYsTUFBTSxHQUFHWSxXQUFmLEVBQUE7QUFFQSxTQUNFLEtBQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFELElBQUEsRUFBQSxDQUFBLEdBQUEsU0FBQSxDQUFBLE9BQUEsRUFBQTtBQUNFLElBQUEsS0FBSyxFQUFFLENBQ0w7QUFDRUMsTUFBQUEsVUFBVSxFQUFFYixNQUFNLENBRHBCLEdBQUE7QUFFRWMsTUFBQUEsWUFBWSxFQUFFZCxNQUFNLENBRnRCLEtBQUE7QUFHRWUsTUFBQUEsYUFBYSxFQUFFZixNQUFNLENBSHZCLE1BQUE7QUFJRWdCLE1BQUFBLFdBQVcsRUFBRWhCLE1BQU0sQ0FMaEI7QUFDTCxLQURLLEVBRFQsS0FDUztBQURULEdBQUEsRUFBQSxJQUFBLEVBQUE7QUFBQSxJQUFBLFFBQUEsRUFBQTtBQUFBLE1BQUEsUUFBQSxFQUFBLFlBQUE7QUFBQSxNQUFBLFVBQUEsRUFERjtBQUNFO0FBQUEsR0FBQSxDQUFBLENBREY7QUFjRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcsIFZpZXdQcm9wcyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyBFZGdlSW5zZXRzIGFzIEVkZ2VJbnNldHNULCBJbnNldENoYW5nZWRFdmVudCB9IGZyb20gJy4vU2FmZUFyZWEudHlwZXMnO1xuaW1wb3J0IE5hdGl2ZVNhZmVBcmVhVmlldyBmcm9tICcuL05hdGl2ZVNhZmVBcmVhVmlldyc7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgaW5pdGlhbFdpbmRvd1NhZmVBcmVhSW5zZXRzIH0gZnJvbSAnLi9Jbml0aWFsV2luZG93U2FmZUFyZWFJbnNldHMnO1xuXG5leHBvcnQgY29uc3QgU2FmZUFyZWFDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxFZGdlSW5zZXRzVCB8IG51bGw+KG51bGwpO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNhZmVBcmVhVmlld1Byb3BzIHtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGluaXRpYWxTYWZlQXJlYUluc2V0cz86IEVkZ2VJbnNldHNUIHwgbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNhZmVBcmVhUHJvdmlkZXIoe1xuICBjaGlsZHJlbixcbiAgaW5pdGlhbFNhZmVBcmVhSW5zZXRzLFxufTogU2FmZUFyZWFWaWV3UHJvcHMpIHtcbiAgY29uc3QgcGFyZW50SW5zZXRzID0gdXNlUGFyZW50U2FmZUFyZWEoKTtcbiAgY29uc3QgW2luc2V0cywgc2V0SW5zZXRzXSA9IFJlYWN0LnVzZVN0YXRlPEVkZ2VJbnNldHNUIHwgbnVsbCB8IHVuZGVmaW5lZD4oXG4gICAgaW5pdGlhbFNhZmVBcmVhSW5zZXRzIHx8IHBhcmVudEluc2V0cyxcbiAgKTtcbiAgY29uc3Qgb25JbnNldHNDaGFuZ2UgPSBSZWFjdC51c2VDYWxsYmFjaygoZXZlbnQ6IEluc2V0Q2hhbmdlZEV2ZW50KSA9PiB7XG4gICAgc2V0SW5zZXRzKGV2ZW50Lm5hdGl2ZUV2ZW50Lmluc2V0cyk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxOYXRpdmVTYWZlQXJlYVZpZXcgc3R5bGU9e3N0eWxlcy5maWxsfSBvbkluc2V0c0NoYW5nZT17b25JbnNldHNDaGFuZ2V9PlxuICAgICAge2luc2V0cyAhPSBudWxsID8gKFxuICAgICAgICA8U2FmZUFyZWFDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtpbnNldHN9PlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9TYWZlQXJlYUNvbnRleHQuUHJvdmlkZXI+XG4gICAgICApIDogbnVsbH1cbiAgICA8L05hdGl2ZVNhZmVBcmVhVmlldz5cbiAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBmaWxsOiB7IGZsZXg6IDEgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgU2FmZUFyZWFDb25zdW1lciA9IFNhZmVBcmVhQ29udGV4dC5Db25zdW1lcjtcblxuZnVuY3Rpb24gdXNlUGFyZW50U2FmZUFyZWEoKTogUmVhY3QuQ29udGV4dFR5cGU8dHlwZW9mIFNhZmVBcmVhQ29udGV4dD4ge1xuICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChTYWZlQXJlYUNvbnRleHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlU2FmZUFyZWEoKTogRWRnZUluc2V0c1Qge1xuICBjb25zdCBzYWZlQXJlYSA9IFJlYWN0LnVzZUNvbnRleHQoU2FmZUFyZWFDb250ZXh0KTtcbiAgaWYgKHNhZmVBcmVhID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnTm8gc2FmZSBhcmVhIHZhbHVlIGF2YWlsYWJsZS4gTWFrZSBzdXJlIHlvdSBhcmUgcmVuZGVyaW5nIGA8U2FmZUFyZWFQcm92aWRlcj5gIGF0IHRoZSB0b3Agb2YgeW91ciBhcHAuJyxcbiAgICApO1xuICB9XG4gIHJldHVybiBzYWZlQXJlYTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNhZmVBcmVhVmlldyh7XG4gIHN0eWxlLFxuICAuLi5yZXN0XG59OiBWaWV3UHJvcHMgJiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkge1xuICBjb25zdCBpbnNldHMgPSB1c2VTYWZlQXJlYSgpO1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXdcbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHtcbiAgICAgICAgICBwYWRkaW5nVG9wOiBpbnNldHMudG9wLFxuICAgICAgICAgIHBhZGRpbmdSaWdodDogaW5zZXRzLnJpZ2h0LFxuICAgICAgICAgIHBhZGRpbmdCb3R0b206IGluc2V0cy5ib3R0b20sXG4gICAgICAgICAgcGFkZGluZ0xlZnQ6IGluc2V0cy5sZWZ0LFxuICAgICAgICB9LFxuICAgICAgICBzdHlsZSxcbiAgICAgIF19XG4gICAgICB7Li4ucmVzdH1cbiAgICAvPlxuICApO1xufVxuXG5leHBvcnQgdHlwZSBFZGdlSW5zZXRzID0gRWRnZUluc2V0c1Q7XG4iXX0=